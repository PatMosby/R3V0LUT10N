\documentclass[fontsize=12pt,paper=a4,twoside]{scrartcl}

\newcommand{\grad}{\ensuremath{^{\circ}} }
\renewcommand{\strut}{\vrule width 0pt height5mm depth2mm}

\usepackage{qtree}

\usepackage[utf8]{inputenc}
\usepackage[final]{pdfpages}
% obere Seitenränder gestalten können
\usepackage{fancyhdr}
\usepackage{moreverb}
% Graphiken als jpg, png etc. einbinden können
\usepackage{graphicx}
\usepackage{stmaryrd}
% Floats Objekte mit [H] festsetzen
\usepackage{float}
% setzt URL's schön mit \url{http://bla.laber.com/~mypage}
\usepackage{url}
% Externe PDF's einbinden können
\usepackage{pdflscape}
% Verweise innerhalb des Dokuments schick mit " ... auf Seite ... "
% automatisch versehen. Dazu \vref{labelname} benutzen
\usepackage[ngerman]{varioref}
\usepackage[ngerman]{babel}
\usepackage{ngerman}
% Bibliographie
\usepackage{bibgerm}
% Tabellen
\usepackage{tabularx}
\usepackage{supertabular}
\usepackage[colorlinks=true, pdfstartview=FitV, linkcolor=blue,
            citecolor=blue, urlcolor=blue, hyperfigures=true,
            pdftex=true]{hyperref}
\usepackage{bookmark}


\newboolean{langversion} %Deklaration
\setboolean{langversion}{true} %Zuweisung ist 'false' für Blockkurs
\newcommand{\highlight}[1]{\textcolor{blue}{\textbf{#1}}}
\newcommand{\nurlangversion}[0]{%
\ifthenelse{\boolean{langversion}}{\highlight{Muss in SWP-2 ausgefüllt werden}}{\highlight{Entfällt in SWP-1}}}

% erstes Argument: SWP-2, zweites SWP-1
\newcommand{\variante}[2]{\ifthenelse{\boolean{langversion}}{#1}{#2}}


% Damit Latex nicht zu lange Zeilen produziert:
\sloppy
%Uneinheitlicher unterer Seitenrand:
%\raggedbottom

% Kein Erstzeileneinzug beim Absatzanfang
% Sieht aber nur gut aus, wenn man zwischen Absätzen viel Platz einbaut
\setlength{\parindent}{0ex}

% Abstand zwischen zwei Absätzen
\setlength{\parskip}{1ex}

% Seitenränder für Korrekturen verändern
\addtolength{\evensidemargin}{-1cm}
\addtolength{\oddsidemargin}{1cm}

\bibliographystyle{gerapali}

% Lustige Header auf den Seiten
  \pagestyle{fancy}
  \setlength{\headheight}{70.55003pt}
  \fancyhead{}
  \fancyhead[LO,RE]{Software--Projekt 2\\  2013
  \\Testplan}
  \fancyhead[LE,RO]{Seite \thepage\\\slshape \leftmark\\\slshape \rightmark}

%
% Und jetzt geht das Dokument los....
%

\begin{document}

% Lustige Header nur auf dieser Seite
  \thispagestyle{fancy}
  \fancyhead[LO,RE]{ }
  \fancyhead[LE,RO]{Universität Bremen\\FB 3 -- Informatik\\
  Prof. Dr. Rainer Koschke \\TutorIn: Sabrina Wilske}
  \fancyfoot[C]{}

% Start Titelseite
  \vspace{3cm}

  \begin{minipage}[H]{\textwidth}
  \begin{center}
  \bf
  \Large
  Software--Projekt 2 2013\\
  \smallskip
  \small
  VAK 03-BA-901.02\\
  \vspace{3cm}
  \end{center}
  \end{minipage}
  \begin{minipage}[H]{\textwidth}
  \begin{center}
  \vspace{1cm}
  \bf
  \Large Testplan\\
  \vspace{3ex} \small IT\_R3V0LUT10N\\
  \vfill
  \end{center}
  \end{minipage}
  \vfill
  \begin{minipage}[H]{\textwidth}
  \begin{center}
  \sf
  \begin{tabular}{lrr}
 			Sebastian Bredehöft & sbrede@tzi.de & 2751589\\
 			Patrick Damrow & damsen@tzi.de & 2056170\\
 			Tobias Dellert & tode@tzi.de & 2936941\\
 			Tim Ellhoff & tellhoff@tzi.de & 2520913\\
 			Daniel Pupat & dpupat@tzi.de & 2703053\\
  \end{tabular}
  \\ ~
  \vspace{2cm}
  \\
  \it Abgabe: 22. Dezemebr 2013 --- Version 1.0\\ ~
  \end{center}
  \end{minipage}

% Ende Titelseite

% Start Leerseite

\newpage

  \thispagestyle{fancy}
  \fancyhead{}
  \fancyhead[LO,RE]{Software--Projekt \\  2013
  \\Testplan}
  \fancyhead[LE,RO]{Seite \thepage\\\slshape \leftmark\\~}
  \fancyfoot{}
  \renewcommand{\headrulewidth}{0.4pt}
  \tableofcontents

\newpage

  \fancyhead[LE,RO]{Seite \thepage\\\slshape \leftmark\\\slshape \rightmark}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section*{Version und Änderungsgeschichte}
\begin{tabular}{ccl}
Version & Datum & Änderungen \\
\hline
1.0 & 18.12.2013 & Dokumentvorlage als initiale Fassung kopiert \\
1.1 & 21.12.2013 & Bis auf Testfälle und Testzeitplan vervollständigt \\
1.2 & 22.12.2013 & Testplan abgabefertig
\end{tabular}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Einführung (Sebastian)}\label{c01}

\subsection{Zweck}
Der Testplan bietet einen Überblick über die geplanten Tests und dient u.a. als Anleitung für die Tester. Die Software soll dabei ausführlich auf Funktionalität getestet werden. 

Im Testplan wird festgelegt, wie man welche Komponenten testet. Dazu wird außerdem definiert, welchen Umfang die Tests haben sollen und wann ein Test erfolgreich ist und wann nicht.

Während der Implementierungsphase werden wir uns nach dem Testplan richten und ihn gegebenenfalls weiterführen und vervollständigen.


\subsection{Umfang}
Der Testplan entspricht der vereinfachten Form des \emph{IEEE Standard for Software Test Documentation 829-1998}. 

\subsection{Beziehungen zu anderen Dokumenten}
Dieser Testplan bezieht sich zum einen auf die Anforderungsspezifikation, da dort die Systemeigenschaften und Systemattribute spezifiziert wurden. Die Testfälle werden auf Grundlage der dortigen Anwendungsfälle entwickelt.

Außerdem gibt es Referenzen zur Architekturbeschreibung, da in dieser die Module und Komponenten definiert wurden, die in diesem Dokument getestet werden sollen.


\subsection{Aufbau der Testbezeichner}
\label{sec:aufb-der-testb}

Der Aufbau der Testbezeichner richtet sich nach folgendem Schema:
\begin{itemize}
\item Die ersten beiden Buchstaben geben die Art des Tests vor. Dabei unterscheiden wir zwischen vier verschiedenen Testarten:
\begin{itemize}
	\item Komponententests = KT
	\item Integrationstests = IT
	\item Funktionstests = FT
	\item Leistungstests = LT
\end{itemize}
\item Die Nummer steht für die jeweilige Testfallnummer

\item Optional: in alphabetischer Reihenfolge werden hier Variationen oder untergeordnete Testfälle definiert
\end{itemize}
Nach diesem Schema sieht ein Testbezeichner nun folgendermaßen aus:

\textbf{\emph{IT-3-A}}: Integrationstest, Nr. 3, Variante 1

%%
%% Dokumentation der Testergebnisse 
%%
\subsection{Dokumentation der Testergebnisse}

Zu jedem Testfall wird ein kurzes Testprotokoll angefertigt. Dieses beinhaltet den Ablauf des Testfalls und die möglichen Komplikationen, die bei der Durchführung entstehen können. Dann werden die Resultate des Testfalls bestimmt und eventuell gefundene Fehler beschrieben.

%%
%% Definitionen und Referenzen 
%%
\subsection{Definitionen und Akronyme}
\label{c00b}


\subsection{Referenzen}
\emph{IEEE Standard for Software Test Documentation 829-1998}\\
\url{http://standards.ieee.org/findstds/standard/829-1998.html}

\bibliographystyle{plain}
\bibliography{literatur}


% Systemüberblick
\section{Systemüberblick (Sebastian)}\label{c02}
Das System besteht aus der Server- und der Clientkomponente. Die konzeptionelle Sicht der Architekturbeschreibung (vgl. Abschnitt 3 der Architekturbeschreibung) dient als Grundlage für den Testplan, da dort die verschiedenen Komponenten  beschrieben werden.

Auf der Serverseite gibt es die Komponenten \texttt{Communication, BusinessLogic} und \texttt{Persistence} (vgl. Abbildung 3: Konzeptionelle Sicht Server; Architekturbeschreibung).

Die Clientseite besteht aus den Komponenten \texttt{Communication, Model} und \texttt{User Interface} (vgl. Abbildung 4: Konzeptionelle Sicht Client; Architekturbeschreibung).

Da starke Abhängigkeiten zwischen all diesen Komponenten bestehen, ist es wichtig, dass diese Komponenten fehlerfrei funktionieren. 

\subsection{Module der Anwendungsschicht und deren Funktionen}
\label{mod-controller}

In der nachfolgenden Tabelle werden die Module verfeinert die in Punkt 5 visualisiert sind.

\begin{tabular}{|l|p{12cm}|}
\hline
	GUI & webapp(xhtml)\\
\hline
	AndroidApp & AsyncBookTask.java BookAdapter.java MainActivity.java  ShowBookActivity.java\\
\hline
	Model & it\_r3v.bibjsf.presentation\\
\hline
	Communication & Network.java\\
\hline
	UserInterface & GUI AndroidApp\\
\hline
	BusinessLogic & AdministrationHandler.java MediumHandler.java BusinessHandler.java BusinessObjectHandler.java ReaderHandler.java LibrarianHandler.java BorrowHandler.java\\
\hline
	BibCommon & Medium.java BusinessObject.java Reader.java Admin.java Librarian.java\\
\hline
	Persistence & Data.java Persistence.java\\
\hline
\end{tabular}


\clearpage

\section{Merkmale (Daniel)}
\label{c04}

Zu testende Merkmale sind in erster Linie Funktionen, die in den Mindestanforderungen enthalten sind. Dabei ist zu beachten, dass die Funktionen des Lesers für die Website und der App getestet werden müssen, während sich die anderen Testmerkmale auf die Website beziehen. Beide sind im Folgenden aufgelistet:\\

1. Benutzerrechte\\
\begin{itemize}
\item[1.1]Administrator 
\item[1.2]Bibliothekar 
\item[1.3]Leser 
\item[1.4]Gast
\end{itemize}
\bigskip
2. Administrator\\
\begin{itemize}
\item[2.1]Bibliothekar hinzufügen
\item[2.2]Bibliothekar löschen
\item[2.3]Bibliothekar ändern
\end{itemize}
\bigskip
3. Bibliothekar\\
\begin{itemize}
\item[3.1]Medium hinzufügen
\item[3.2]Medium löschen
\item[3.3]Medium ändern
\item[3.4]Medium ausleihen
\item[3.5]Medium zurücknehmen
\item[3.6]Abgabedaten und Mahngebühren ändern
\item[3.7]Vormerkungen anzeigen
\item[3.8]Übersicht über verliehene Bücher(Versäumnisse, Mahngebühren)
\item[3.9]Statistiken anzeigen
\end{itemize}
\bigskip
4.Leser\\
\begin{itemize}
\item[4.1]Medium suchen
\item[4.2]Medium anzeigen
\item[4.3]Medium vormerken
\end{itemize}
\bigskip
Dazu kommt noch der Gast, der unangemeldet nur suchen kann und man sollte die Unterklassen von Medium noch einzeln testen, ob diese die geforderten Attribute und Funktionen enthalten.

\subsubsection{Funktionale Anforderungen} 

Besonders wichtig sind die Funktionen des Bibliothekars (3.1-3.5). Die sollten gut getestet werden, da es beim Ausleihvorgang nicht zu Problemen kommen soll, sodass irgendwo Bücher verschwinden oder Ausleiher oder Bücher verwechselt werden. Auch wichtig ist die Benutzerunterscheidung, damit Leser nicht irgendwas löschen oder hinzufügen. Außerdem sollte man die Suche und das Anzeigen der Bücher ausgiebig testen, da dies die Hauptfunktionen des Lesers sind.

\subsection{Nicht zu testende Merkmale}\label{c05}
Nicht zu testende Merkmale sind in erster Linie alle trivialen Funktionen. Zudem brauchen bereits implementierte Funktionen, wie \texttt{Leser verwalten, Backup} und \texttt{Restore, Buchaufkleber drucken, Leserausweise drucken, Import und Export von Buch- und Leserdaten} nicht mehr getestet werden, sofern man diese nicht verändert. Da wir \texttt{Buch verwalten} noch verändern, da wir mit mehreren Medientypen arbeiten, ist dieses wie in \ref{c04} beschrieben noch zu testen.

% Abnahme- und Testkriterien
\section{Abnahme- und Testendekriterien(Daniel \& Sebastian)}\label{c07}
Fehler werden in eine Kategorie eingeordnet und erhalten entsprechende Fehlerwerte. Aus diesen Fehlerwerten ergeben sich Prioritäten, die die Reihenfolge der Fehlerbehandlung angibt. Das Testen wird beendet, wenn der berechnete Fehlerwert aller Fehler pro 1000 Zeilen Code unter dem Wert 10 liegt und die Software nicht beeinträchtigt wird, d.h. es keinen Fehler der Fehlerklasse \texttt{Mittel} oder höher gibt.

\textbf{Testabdeckung}
Die Testabdeckung soll so hoch wie möglich sein. Für ein stabiles System spricht, das die Testabdeckung in systemkritischen Bereichen soweit vollständig ist. Jeder Fehler in diesem Bereich kann das System zum Absturz bringen und muss somit verhindert werden. In anderen Bereichen die das laufende System bei einem Fehler weniger beinträchtigen wird die Testabdeckung nicht so vollständig sein, wie in kritischen Bereichen.

\textbf{Fehlerbewertung:}\\
Die nachfolgende Tabelle spezifiziert die Auswirkung eines Fehlers, durch die man diese nach Priorität einordnen kann.\\

\begin{tabularx}{\textwidth}{|p{2cm}|p{11.53cm}|c|}
\hline
	\textbf{Fehlerkl.\footnote{=Fehlerklasse}} & \textbf{Beschreibung} & \textbf{Wert}\\
\hline
	Leicht & Unwesentliche Fehler, die den Programmablauf nicht beeinträchtigen, aber trotzdem behandelt werden sollten. & 1\\
\hline
	Mittel & Fehler in dieser Art haben Auswirkungen auf den Programmablauf. Dieser beeinträchtigt aber nicht die grundlegenden Funktionen. & 10\\
\hline
	Schwer & Fehler der Klasse ,,Schwer'' beeinträchtigen die Funktionsfähigkeit des Systems sehr stark und müssen sofort behandelt werden. & 20\\
\hline
	Fatal & Diese Fehler machen den Programmablauf unmöglich und können zum Absturz des Systems führen.  & 100\\
\hline
\end{tabularx}



% Vorgehensweise
\section{Vorgehensweise (Sebastian)}\label{c06}

\subsection{Komponenten- und Integrationstest}

Die beiden Komponenten Server und Client werden bezüglich der Integrationstests zunächst unabhängig voneinander getestet und erst bei wenn das sichere Laufen der einzelnen Komponente gewährleistet ist, wird das System als ganzes getestet.

\subsection*{Server}
Es wird zuerst die Persistenz mit \texttt{BibCommon} und \texttt{Persistence} getestet:

{\qtreeshowframes
\Tree [.Persistence BibCommon
]}\\
\\
\\
\\
Nun folgt das Zusammenspiel mit der BusinessLogic \texttt{BusinessLogic}:\\

{\qtreeshowframes
\Tree [.Persistence [.Businesslogic ] {BibCommon} ]}\\
\\
\\
\\
Darauf folgt nun die Kommunikation \texttt{Communication} mit den vorigen Komponenten:

{\qtreeshowframes
\Tree [.Persistence [.BusinessLogic {Communication} ] {BibCommon} ]}\\
\\
\\
\\
Somit ist der Server als ganzes zu testen, da jede einzelnen Komponenten mit ihren jeweiligen Abhängigkeiten getestet wurden.
\subsection*{Client}
Hier sind nun zwei verschiedene Komponenten für die Darstellung auf dem jeweiligen Endgerät vorhanden:\\

Einmal \texttt{GUI} welche zusammen mit dem Model getestet wird und sich an die Browserdarstellung richtet:

{\qtreeshowframes
\Tree [.GUI [.Model ]]}\\
\\
\\
\\
Und einmal \texttt{Android App} mit dem Model, welche sich an mobile Geräte richtet:

{\qtreeshowframes
\Tree [.AndroidApp [.Model ]]}\\
\\
\\
\\
Diese beiden Tests werden zusammengefasst zu \texttt{User Interface} und zusammen mit der nächsten Ebene, dem Model getestet:

{\qtreeshowframes
\Tree [.UserInterface [.Model ]]}\\
\\
\\
\\
Darauf folgt nun der Test mit der Komponente \texttt{Communication}:

{\qtreeshowframes
\Tree [.UserInterface [.Model [.Communication ]]]}\\
\\
\\
\\
Nun ist das Zusammenspiel der Komponenten des Clients gewährleistet.
\subsection*{Server + Client}
Um die kompletten Systemkomponenten zu testen werden jetzt der komplette Client und der komplette Server zusammen getestet:

{\qtreeshowframes
\Tree [.Persistence [.BusinessLogic [.Communication [.Model [.UserInterface GUI AndroidApp ] ] ] ] BibCommon ]

\subsection{Funktionstest}

Die Funktionstest sind durch jene Anwendungsfälle aus der Anforderungsspezifikation vorgegeben. Jede dieser Funktionen muss durch Tests gedeckt sein.


\section{Aufhebung und Wiederaufnahme (Daniel)}\label{c08}

Wir werden Tests unterbrechen, wenn ein gewisser Wert überschritten wird, welcher über die Tabelle in Abschnitt  \ref{c07} berechnet wird. In diesem Fall werden wir sofort wieder mit der Implementierung anfangen. Da wir mit der Bottom-up Strategie testen, werden wir bei Fehlern in der unteren Schicht einen niedrigeren Wert nehmen.\\
Bei Fehlern der Data setzen wir einen Wert von 10, bei Fehlern in der Logik einen Wert von 20 und bei Fehlern, welche die GUI betreffen, einen von 40 und bei den restlichen Faktoren einen von 100.\\
Sollten die Fehler behoben sein, testen wir noch einmal alle Komponenten, die mit den veränderten interagieren.

\section{Hardware- und Softwareanforderungen (Daniel)}\label{c09}


\subsection{Hardware}

Als Hardware stehen uns unsere Notebooks und Smartphones, sowie die Unirechner zur Verfügung. Dabei haben wir alle geforderten Betriebssysteme mindestens einmal auf unseren Notebooks installiert, sodass wir auf jeden Gerät testen können. Wir besitzen ebenfalls einen PC, der über Windows 2000 läuft, darüber testen wir auch noch, da dies den Rechnern des Kunden entspricht. Da nur Android Unterstützung gefordert ist, werden wir die App über unseren vorhandenen Smartphones, die Android haben, testen.

\subsection{Software}

Als Software benutzen wir in der Eclipse Umgebung JUnit-Tests. Diese werden in Form von BlackBox- und WhiteBox-Tests implementiert. Die App werden wir mithilfe eines Android Emulators testen.

% Testfälle
\section{Testfälle (Daniel \& Sebastian)}\label{c10}

\subsection{Komponententest}\label{c10-0}

Wir haben hier alle Klassen aufgelistet, welche wir testen wollen. Dabei werden wir keine abstrakten Klassen und Interfaces testen. Vorgegebene Klassen, welche bereits funktionieren, werden wir nicht testen. Exceptions testen wir nicht einzeln, sondern diese werden mit den zugehörigen Methoden getestet.

\begin{table}[h]
\centering
\begin{tabular}{|l|p{3cm}|p{3cm}|l|}
\hline
Klasse & Implementierer & Tester & Testart \\
\hline
AsyncBookTask & Patrick  & Tim    & Blackbox \\
BookAdapter      & Patrick   & Daniel   & Blackbox \\
MainActivity     & Patrick  & Sebastian   & Blackbox \\
Network      & Patrick  & Tobias    & Blackbox \\
ShowBookActivity      & Patrick  & Tim    & Blackbox \\
Admin      & Tim  & Daniel    & Blackbox \\
Medium      & Tim  & Patrick    & Blackbox \\
Reader      & Tim  & Tobias    & Blackbox \\
Librarian      & Tim  & Daniel    & Blackbox \\
Config      & Tim  & Sebastian    & Blackbox \\
AdministrationHandler      & Daniel  & Patrick    & Blackbox \\
BorrowHandler      & Daniel  & Tim    & Blackbox \\
MediumHandler      & Daniel  & Tobias    & Blackbox \\
LibrarianHandler      & Daniel  & Tim    & Blackbox \\
ReaderHandler      & Daniel  & Tim    & Blackbox \\
Data      & Daniel  & Tobias    & Blackbox \\
AddLibrarianForm      & Tobias  & Patrick    & Blackbox \\
AddMediumForm      & Tobias  & Tim    & Blackbox \\
AddReaderForm      & Tobias  & Sebastian    & Blackbox \\
Administration      & Tobias  & Patrick    & Blackbox \\
AuthBackingBean      & Tobias  & Tim    & Blackbox \\
MediumListDataModel      & Sebastian  & Patrick    & Blackbox \\
MediumTable      & Sebastian  & Daniel    & Blackbox \\
ReaderTable      & Sebastian  & Tobias    & Blackbox \\
ChangeMediumForm      & Sebastian  & Tim    & Blackbox \\
ChangeReaderForm      & Sebastian  & Daniel    & Blackbox \\
TableDataModel      & Sebastian  & Patrick    & Blackbox \\
BibServices      & Sebastian  & Tim    & Blackbox \\
\hline
\end{tabular}
\caption{Komponententests}
\label{tab:komponententests}
\end{table}

\clearpage
\subsection{Integrationstest}\label{c10a}

\begin{tabular}{|l|p{12cm}|}
\hline
	Testfallbezeichner & IT-1-a Medium hinzufügen\\
\hline
	Testobjekte & Persistence, Bibcommon\\
\hline
	Eingabe & Mediendaten(Titel, Autor etc.)\\
\hline
	Ausgabe & Erfolgreich Medium hinzugefügt\\
\hline
	Umgebungserfordernisse & Glassfishserver läuft, Datenbank existiert\\
\hline
	Anforderungen & keine\\
\hline
	Abhängigkeiten & keine \\
\hline
\end{tabular}

\begin{tabular}{|l|p{12cm}|}
\hline
	Testfallbezeichner & IT-1-b Medium löschen\\
\hline
	Testobjekte & Persistence, Bibcommon\\
\hline
	Eingabe & MediumID\\
\hline
	Ausgabe & Erfolgreich Medium gelöscht\\
\hline
	Umgebungserfordernisse & Glassfishserver läuft, Datenbank existiert\\
\hline
	Anforderungen & Medium ist in Datenbank vorhanden\\
\hline
	Abhängigkeiten & IT-1-a \\
\hline
\end{tabular}
\begin{tabular}{|l|p{12cm}|}
\hline
	Testfallbezeichner & IT-2-a Leser hinzufügen\\
\hline
	Testobjekte & BusinessLogic, Persistence, Bibcommon\\
\hline
	Eingabe & Leserdaten(Name, Nachname etc.)\\
\hline
	Ausgabe & Erfolgreich Leser hinzugefügt\\
\hline
	Umgebungserfordernisse & Glassfishserver läuft, Datenbank existiert\\
\hline
	Anforderungen & keine\\
\hline
	Abhängigkeiten & keine \\
\hline
\end{tabular}

\begin{tabular}{|l|p{12cm}|}
\hline
	Testfallbezeichner & IT-2-b Leser löschen\\
\hline
	Testobjekte & BusinessLogic, Persistence, Bibcommon\\
\hline
	Eingabe & LeserID\\
\hline
	Ausgabe & Erfolgreich Leser gelöscht\\
\hline
	Umgebungserfordernisse & Glassfishserver läuft, Datenbank existiert\\
\hline
	Anforderungen & Leser ist in Datenbank vorhanden\\
\hline
	Abhängigkeiten & IT-2-a \\
\hline
\end{tabular}

\begin{tabular}{|l|p{12cm}|}
\hline
	Testfallbezeichner & IT-3-a Alle Medien zurückgeben\\
\hline
	Testobjekte & Communication, BusinesLogic, Persistence, Bibcommon\\
\hline
	Eingabe & Mediendatenbank\\
\hline
	Ausgabe & Liste zurückgeben\\
\hline
	Umgebungserfordernisse & Glassfishserver läuft, Datenbank existiert\\
\hline
	Anforderungen & Datenbank enthält verschiedene Medien\\
\hline
	Abhängigkeiten & keine \\
\hline
\end{tabular}

\begin{tabular}{|l|p{12cm}|}
\hline
	Testfallbezeichner & IT-3-b Alle Bücher zurückgeben\\
\hline
	Testobjekte & Communication, BusinesLogic, Persistence, Bibcommon\\
\hline
	Eingabe & Medienart, nach welcher sortiert werden soll\\
\hline
	Ausgabe & Liste zurückgeben\\
\hline
	Umgebungserfordernisse & Glassfishserver läuft, Datenbank existiert\\
\hline
	Anforderungen & Datenbank enthält verschiedene Medien\\
\hline
	Abhängigkeiten & keine \\
\hline
\end{tabular}

\begin{tabular}{|l|p{12cm}|}
\hline
	Testfallbezeichner & IT-4-a Alle Medien als Liste anzeigen\\
\hline
	Testobjekte & GUI, Model\\
\hline
	Eingabe &  Liste anzeigen\\
\hline
	Ausgabe & Medienliste anzeigen\\
\hline
	Umgebungserfordernisse & Website ist aufgerufen, Glassfishserver läuft, Datenbank existiert\\
\hline
	Anforderungen & Datenbank enthält verschiedene Medien\\
\hline
	Abhängigkeiten & IT-1 bis IT-3 \\
\hline
\end{tabular}

\begin{tabular}{|l|p{12cm}|}
\hline
	Testfallbezeichner & IT-4-b Alle Medien als Liste anzeigen\\
\hline
	Testobjekte & AndroidApp, Model\\
\hline
	Eingabe &  Liste anzeigen\\
\hline
	Ausgabe & Medienliste anzeigen\\
\hline
	Umgebungserfordernisse & App ist gestartet, Glassfishserver läuft, Datenbank existiert\\
\hline
	Anforderungen & Datenbank enthält verschiedene Medien\\
\hline
	Abhängigkeiten & IT-1 bis IT-3 \\
\hline
\end{tabular}

\begin{tabular}{|l|p{12cm}|}
\hline
	Testfallbezeichner & IT-5 Angezeigte Medienliste nach Titel sortieren\\
\hline
	Testobjekte & UserInterface, Model\\
\hline
	Eingabe &  Titel sortieren\\
\hline
	Ausgabe & sortierte Liste\\
\hline
	Umgebungserfordernisse & Website ist aufgerufen/App ist gestartet, Glassfishserver läuft, Datenbank existiert\\
\hline
	Anforderungen & Datenbank enthält verschiedene Medien\\
\hline
	Abhängigkeiten & IT-1 bis IT-3 \\
\hline
\end{tabular}

\begin{tabular}{|l|p{12cm}|}
\hline
	Testfallbezeichner & IT-6 Dvd suchen\\
\hline
	Testobjekte & Communication, UserInterface, Model\\
\hline
	Eingabe &  Suchbegriff\\
\hline
	Ausgabe & gefundene Dvd\\
\hline
	Umgebungserfordernisse & Website ist aufgerufen/App ist gestartet, Glassfishserver läuft, Datenbank existiert\\
\hline
	Anforderungen & Datenbank enthält verschiedene Medien\\
\hline
	Abhängigkeiten & IT-1 bis IT-3 \\
\hline
\end{tabular}

\begin{tabular}{|l|p{12cm}|}
\hline
	Testfallbezeichner & IT-7 Ausleihhistorie eines Benutzers anzeigen\\
\hline
	Testobjekte & Communication, UserInterface, Model, BusinessLogic, Persistence, BibCommon\\
\hline
	Eingabe &  Eine BenutzerID\\
\hline
	Ausgabe & Liste der ausgeliehenen Medien\\
\hline
	Umgebungserfordernisse & Website ist aufgerufen, Glassfishserver läuft, Datenbank existiert, \\
\hline
	Anforderungen & Benutzer ist Bibliothekar, gesuchter Benutzer befindet sich in Datenbank, Datenbank enthält verschiedene Medien\\
\hline
	Abhängigkeiten & IT-1 bis IT-6 \\
\hline
\end{tabular}

\begin{tabular}{|l|p{12cm}|}
\hline
	Testfallbezeichner & IT-8 Einloggen\\
\hline
	Testobjekte & Communication, UserInterface, Model, BusinessLogic, Persistence, BibCommon\\
\hline
	Eingabe &  Logindaten\\
\hline
	Ausgabe & erfolgreich eingeloggt\\
\hline
	Umgebungserfordernisse & Website ist aufgerufen/App ist gestartet, Glassfishserver läuft, Datenbank existiert\\
\hline
	Anforderungen & Nutzer existiert, Datenbank enthält verschiedene Medien\\
\hline
	Abhängigkeiten & IT-1 bis IT-6 \\
\hline
\end{tabular}


\subsection{Funktionstest}\label{c10b}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-1\\
\hline
	Anwendungsfall & Login\\
\hline
	Eingabe & Anmeldedaten(Nutzername, Passwort)\\
\hline
	Ausgabe & Rückmeldung über erfolgreiche Anmeldung\\ &
	Bei Fehlerfall: Rückmeldung Anmeldung nicht erfolgreich\\
\hline
	Umsetzung & Manuelle Eingabe der Nutzerdaten, Benutzer ist registriert\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-2\\
\hline
	Anwendungsfall & Logout\\
\hline
	Eingabe & Logout-Button wird gedrückt\\
\hline
	Ausgabe & Rückmeldung über erfolgreiche Abmeldung\\ &
	Bei Fehlerfall: Rückmeldung Abmeldung nicht erfolgreich\\
\hline
	Umsetzung & Manuelles ausloggen, Benutzer ist registriert\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-3\\
\hline
	Anwendungsfall & Leserinformationen anzeigen\\
\hline
	Eingabe & Detailbutton in der Leserliste wird gedrückt\\ & Alternativ: Lesersuche und dann auf Leser klicken\\
\hline
	Ausgabe & Leserinformation\\ &
	Bei Fehlerfall: Fehlerrückmeldung\\
\hline
	Umsetzung & Manuell auf einen Leser klicken; Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-4\\
\hline
	Anwendungsfall & Vormerkung bearbeiten\\
\hline
	Eingabe & Benutzer sieht seine Vormerkungen; Bearbeiten bei einer Vormerkung klicken\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches Ändern\\ &
	Bei Fehlerfall: Rückmeldung Ändern war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist registrierter Leser\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-5\\
\hline
	Anwendungsfall & Alle Medien anzeigen\\
\hline
	Eingabe & Medienliste aufrufen\\
\hline
	Ausgabe & Medienliste wird angezeigt\\ &
	Bei Fehlerfall: Medienliste wird nicht angezeigt\\
\hline
	Umsetzung & Manuell, beliebiger Benutzer\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-6\\
\hline
	Anwendungsfall & Medien hinzufügen\\
\hline
	Eingabe & Mediendaten (Manuell oder durch Scanner)\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches Hinzufügen\\ &
	Bei Fehlerfall: Rückmeldung Hinzufügen war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-7\\
\hline
	Anwendungsfall & Dasselbe Medium wird hinzugefügt\\
\hline
	Eingabe & Mediendaten eines schon vorhandenen Mediums\\
\hline
	Ausgabe & Fehlermeldung; Medium schon vorhanden\\ &
	Bei Fehlerfall: Medium wurde erfolgreich hinzugefügt\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-8\\
\hline
	Anwendungsfall & Das gleiche Medium wird hinzugefügt (anderes Exemplar)\\
\hline
	Eingabe & Mediendaten eines schon vorhandenen Mediums, mit individueller ID\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches Hinzufügen des Exemplars\\ &
	Bei Fehlerfall: Rückmeldung Hinzufügen war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-9\\
\hline
	Anwendungsfall & Medium bearbeiten\\
\hline
	Eingabe & neue Mediendaten\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches Ändern\\ &
	Bei Fehlerfall: Rückmeldung Ändern war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-10\\
\hline
	Anwendungsfall & Medium löschen\\
\hline
	Eingabe & MediumID\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches Löschen\\ &
	Bei Fehlerfall: Rückmeldung Ändern war nicht erfolgreich\\
\hline
	Umsetzung & automatisch\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-11\\
\hline
	Anwendungsfall & CSV-Import\\
\hline
	Eingabe & CSV-Datei\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches Importieren\\ &
	Bei Fehlerfall: Rückmeldung Importieren war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-12\\
\hline
	Anwendungsfall & CSV-Export\\
\hline
	Eingabe & Datenbank\\
\hline
	Ausgabe & CSV-Datei der Eingabe\\ &
	Bei Fehlerfall: Rückmeldung Exportieren war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-13\\
\hline
	Anwendungsfall & Medium suchen\\
\hline
	Eingabe & Suchbegriff\\
\hline
	Ausgabe & Liste von gefundenen Medien\\ &
	Bei Fehlerfall: Rückmeldung Suche war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, beliebiger Nutzer\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-14\\
\hline
	Anwendungsfall & Medium anzeigen\\
\hline
	Eingabe & Auf ein Medium in einer Liste klicken\\
\hline
	Ausgabe & Mediendetails werden angezeigt\\ &
	Bei Fehlerfall: Details werden nicht angezeigt\\
\hline
	Umsetzung & Manuell, beliebiger Nutzer\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-15\\
\hline
	Anwendungsfall & Medium ausleihen\\
\hline
	Eingabe & Medium und Leser\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches Ausleihen\\ &
	Bei Fehlerfall: Rückmeldung Ausleihen war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-16\\
\hline
	Anwendungsfall & Ausleihzeitraum anzeigen\\
\hline
	Eingabe & Leser, der Medien ausgeliehen hat\\
\hline
	Ausgabe & Ausleihzeitraum\\ &
	Bei Fehlerfall: Ausleihzeitraum wird nicht angezeigt\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-17\\
\hline
	Anwendungsfall & Medium zurückgeben\\
\hline
	Eingabe & Medium und Leser\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches zurückgeben\\ &
	Bei Fehlerfall: Rückmeldung Zurückgeben war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-18\\
\hline
	Anwendungsfall & Medium vormerken\\
\hline
	Eingabe & Medium\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches Vormerken\\ &
	Bei Fehlerfall: Rückmeldung Vormerken war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist registrierter Leser\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-19\\
\hline
	Anwendungsfall & Leserliste anzeigen\\
\hline
	Eingabe & Leserliste aufrufen\\
\hline
	Ausgabe & Leserliste\\ &
	Bei Fehlerfall: Leserliste wird nicht angezeigt\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-20\\
\hline
	Anwendungsfall & Leser hinzufügen\\
\hline
	Eingabe & Leserdaten\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches Hinzufügen\\ &
	Bei Fehlerfall: Rückmeldung Hinzufügen war nicht erfolgreich\\
\hline
	Umsetzung & automatisch\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-21\\
\hline
	Anwendungsfall & Leser löschen\\
\hline
	Eingabe & LeserID\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches Löschen\\ &
	Bei Fehlerfall: Rückmeldung Löschen war nicht erfolgreich\\
\hline
	Umsetzung & automatisch\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-22\\
\hline
	Anwendungsfall & Leser bearbeiten\\
\hline
	Eingabe & neue Leserdaten\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches Bearbeiten\\ &
	Bei Fehlerfall: Rückmeldung Bearbeiten war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-23\\
\hline
	Anwendungsfall & Leser sperren\\
\hline
	Eingabe & LeserID\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches Sperren\\ &
	Bei Fehlerfall: Rückmeldung Sperren war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-24\\
\hline
	Anwendungsfall & Leser suchen\\
\hline
	Eingabe & Suchbegriff\\
\hline
	Ausgabe & Suchergebnis\\ &
	Bei Fehlerfall: Rückmeldung Suchen war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-25\\
\hline
	Anwendungsfall & Bibliothekare anzeigen\\
\hline
	Eingabe & BibliothekarID\\
\hline
	Ausgabe & Bibliothekarliste\\ &
	Bei Fehlerfall: leere Liste\\
\hline
	Umsetzung & Manuell, Benutzer ist Administrator\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-26\\
\hline
	Anwendungsfall & Bibliothekar löschen\\
\hline
	Eingabe & BibliothekarID\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches Löschen\\ &
	Bei Fehlerfall: Rückmeldung Löschen war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Administrator\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-27\\
\hline
	Anwendungsfall & Bibliothekar bearbeiten\\
\hline
	Eingabe & BibliothekarID\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches Bearbeiten\\ &
	Bei Fehlerfall: Rückmeldung Bearbeiten war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Administrator\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-28\\
\hline
	Anwendungsfall & Bibliothekar hinzufügen\\
\hline
	Eingabe & Bibliothekardaten\\
\hline
	Ausgabe & Rückmeldung über erfolgreiches Hinzufügen\\ &
	Bei Fehlerfall: Rückmeldung Hinzufügen war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Administrator\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-29\\
\hline
	Anwendungsfall & Statistiken anzeigen: am meisten ausgeliehene Bücher\\
\hline
	Eingabe & Statistiken aufrufen\\
\hline
	Ausgabe & Statistik wird angezeigt\\ &
	Bei Fehlerfall: Rückmeldung Anzeigen war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-30\\
\hline
	Anwendungsfall & Statistiken anzeigen: am wenigsten ausgeliehene Bücher\\
\hline
	Eingabe & Statistiken aufrufen\\
\hline
	Ausgabe & Statistik wird angezeigt\\ &
	Bei Fehlerfall: Rückmeldung Anzeigen war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-31\\
\hline
	Anwendungsfall & Mahnungsliste anzeigen\\
\hline
	Eingabe & Mahnungsliste aufrufen\\
\hline
	Ausgabe & Mahnungsliste wird angezeigt\\ &
	Bei Fehlerfall: Rückmeldung Anzeige war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-32\\
\hline
	Anwendungsfall & Mahnungsliste drucken\\
\hline
	Eingabe & Druckbutton drücken\\
\hline
	Ausgabe & Drucken erfolgreich\\ &
	Bei Fehlerfall: Rückmeldung Drucken war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-33\\
\hline
	Anwendungsfall & Startseite bearbeiten\\
\hline
	Eingabe & Startseiteninhalt\\
\hline
	Ausgabe & Überarbeitete Startseite\\ &
	Bei Fehlerfall: Rückmeldung Bearbeiten war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-34\\
\hline
	Anwendungsfall & Abgabedaten/ Mahngebühren bearbeiten\\
\hline
	Eingabe & neue Abgabedaten/ Mahngebühren\\
\hline
	Ausgabe & Bearbeiten erfolgreich\\ &
	Bei Fehlerfall: Rückmeldung Bearbeiten war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-35\\
\hline
	Anwendungsfall & Vormerkung anzeigen\\
\hline
	Eingabe & BuchID\\
\hline
	Ausgabe & Liste der Vormerkungen\\ &
	Bei Fehlerfall: Rückmeldung Anzeigen war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-36\\
\hline
	Anwendungsfall & Zeige letzten Ausleiher\\
\hline
	Eingabe & BuchID\\
\hline
	Ausgabe & letzter Ausleiher\\ &
	Bei Fehlerfall: Rückmeldung Anzeigen war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist Bibliothekar\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-37\\
\hline
	Anwendungsfall & Liste ausgeliehener Bücher anzeigen\\
\hline
	Eingabe & Historie anzeigen klicken\\
\hline
	Ausgabe & Liste der ausgeliehenen Bücher\\ &
	Bei Fehlerfall: Rückmeldung Anzeigen war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist registrierter Benutzer\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-38\\
\hline
	Anwendungsfall & automatisches Backup\\
\hline
	Eingabe & Backupintervall (Wann immer ein Backup durchgeführt werden soll)\\
\hline
	Ausgabe & Backup erfolgreich\\ &
	Bei Fehlerfall: Rückmeldung Backup war nicht erfolgreich\\
\hline
	Umsetzung & automatisch\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-39\\
\hline
	Anwendungsfall & Verlängerungswunsch einreichen\\
\hline
	Eingabe & Button Verlängern klicken\\
\hline
	Ausgabe & Verlängerungswunsch wird abgeschickt\\ &
	Bei Fehlerfall: Rückmeldung Wunsch einreichen war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist registrierter Leser\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-40\\
\hline
	Anwendungsfall & Ausleihhistorie einschalten\\
\hline
	Eingabe & Einschalten klicken\\
\hline
	Ausgabe & Ausleihhistorie aktiviert\\ &
	Bei Fehlerfall: Rückmeldung Aktivierung war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist registrierter Leser\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & FT-41\\
\hline
	Anwendungsfall & Ausleihhistorie ausschalten\\
\hline
	Eingabe & Ausschalten klicken\\
\hline
	Ausgabe & Ausleihhistorie deaktiviert\\ &
	Bei Fehlerfall: Rückmeldung Deaktivierung war nicht erfolgreich\\
\hline
	Umsetzung & Manuell, Benutzer ist registrierter Leser\\
\hline
\end{tabular}

\subsection{Leistungstest}\label{c10c}

\subsubsection{Härtetest}
\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & LT-1\\
\hline
	Beschreibung & 100 Nutzer lassen sich gleichzeitig die Bücherliste anzeigen\\
\hline
	Ziel: & Robustheit der Datenbank mit vielen Anfragen umzugehen wird getestet\\
\hline
	Bei Erfolg: & Datenbank kann Anfragen bearbeiten; es gibt keine langen Wartezeiten\\
\hline
	Fehler: & TimeOut, Absturz\\
\hline
\end{tabular}

\subsubsection{Volumentest}
\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & LT-2\\
\hline
	Beschreibung & Eine sehr große CSV-Datei wird importiert\\
\hline
	Ziel: & Robustheit der Datenbank mit großen Datenmengen umzugehen wird getestet\\
\hline
	Bei Erfolg: & Datenbank kann mit der Verarbeitung umgehen; es gibt Fehler\\
\hline
	Fehler: & TimeOut, Absturz\\
\hline
\end{tabular}

\subsubsection{Sicherheitstest}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & LT-3\\
\hline
	Beschreibung & Ein Nutzer gibt ein falsches Passwort ein\\
\hline
	Ziel: & Korrekte Authentifizierung wird getestet\\
\hline
	Bei Erfolg: & Nutzer kann sich nicht einloggen; System gibt Fehlermeldung\\
\hline
	Fehler: & Benutzer kann sich anmelden\\
\hline
\end{tabular}

\subsubsection{Erholungstest}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & LT-4\\
\hline
	Beschreibung & Ein Nutzer gibt mehrmals ein falsches Passwort ein\\
\hline
	Ziel: & Erholt sich das System; Kann man sich danach problemlos mit dem richtigen Passwort einloggen\\
\hline
	Bei Erfolg: & Bei richtiger Eingabe der Logindaten, ist man eingeloggt\\
\hline
	Fehler: & Man kann sich nicht mehr einloggen, Absturz\\
\hline
\end{tabular}

\begin{tabular}{|l|p{13.75cm}|}
\hline
	Bezeichner: & LT-5\\
\hline
	Beschreibung & Der Server geht offline und startet die Verbindung neu\\
\hline
	Ziel: & Ist das System nach neuer Verbindung wieder funktionstüchtig\\
\hline
	Bei Erfolg: & System produziert keine Fehler\\
\hline
	Fehler: & Funktionen werden nicht mehr unterstützt, Datenverlust, TimeOut, Absturz\\
\hline
\end{tabular}

\section{Testzeitplan (Daniel \& Sebastian)}
\label{sec:testzeitplan}


Komponententests: Woche ab 20.1.2014\\
Integrationstests: Woche ab 20.1.2014\\
Funktionstests: Woche ab 20.1.2014\\

Komponententests v2: 5.2.2014 bis 10.2.2014\\
Leistungstests: 15.2.2014 bis 23.2.2014\\
Akzeptanztests: Woche vom 10.02.2014 bis 15.02.2014


\end{document}
