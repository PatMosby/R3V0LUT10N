"ID";"AUTHORS";"AVGRATING";"CATEGORIES";"DATEOFADDITION";"DATEOFPUBLICATION";"DESCRIPTION";"NOTE";"IMAGEURL";"INDUSTRIALIDENTIFIER";"LANGUAGE";"LOCATION";"PAGECOUNT";"PREVIEWLINK";"PRICE";"PRINTTYPE";"PUBLISHER";"SUBTITLE";"TITLE";"VOTES"
"30000";"Chris Rupp";"0.0";"Requirements-Engineering";"18.09.2013";"01.07.2009";;"privates Exemplar";;"9783446418417";"de";"TAB 2.57";"555";"http://books.google.de/books?id=l0jfPwAACAAJ&dq=isbn:9783446418417&hl=&cd=1&source=gbs_api";"49.90";"BOOK";"Hanser";;"Requirements-Engineering und -Management";"0"
"30001";"Ian Sommerville";"0.0";"Software-Engineering";"18.09.2013";"01.01.2007";"SOMMERVILLE Software Engineering 8 The eighth edition of the best-selling introduction to software engineering is now updated with three new chapters on state-of-the-art topics. New chapters in the 8th edition O Security engineering, showing youhow you can design software to resist attacks and recover from damage; O Service-oriented software engineering, explaininghow reusable web services can be used to develop new applications; O Aspect-oriented software development, introducing new techniques based on the separation of concerns. Key features O Includes the latest developments in software engineering theory and practice, integrated with relevant aspects of systems engineering. O Extensive coverage ofagile methods andreuse. O Integrated coverage of system safety, security and reliability - illustrating best practice in developing critical systems. O Two running case studies (an information system and a control system) illuminate different stages of thesoftware lifecycle. Online resources Visit www.pearsoned.co.uk/sommerville to access a full range of resources for students and instructors. In addition, a rich collection of resources including links to other web sites, teaching material on related courses and additional chapters is available at http: //www.software-engin.com. IAN SOMMERVILLE is Professor of Software Engineering at the University of St. Andrews in Scotland.";"privates Exemplar";"http://bks8.books.google.de/books?id=B7idKfL0H64C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780321313799";"en";"TAB 2.57";"840";"http://books.google.de/books?id=B7idKfL0H64C&printsec=frontcover&dq=isbn:9780321313799&hl=&cd=1&source=gbs_api";;"BOOK";"Pearson Education";"8th edition";"Software Engineering";"0"
"30002";"Ian Sommerville";"0.0";"Software-Engineering";"18.09.2013";"01.01.2001";"Software Engineering presents a broad perspective on software systems engineering, concentrating on widely-used techniques for developing large-scale software systems. In seven parts, this best-selling book covers a wide spectrum of software processes from initial requirements elicitation through design and development to system evolution. It supports students taking undergraduate and graduate courses in software engineering and software engineers in industry who need to update their knowledge on new techniques such as requirements engineering, distributed systems architectures and system dependability. Extensive market research has ensured that this new edition is useful and relevant for both students and practising software engineers. The sixth edition has been restructured and updated, important new topics have been added and obsolete material has been cut. The end result is an even more focused book that is about 10% shorter than the previous edition. Changes from the fifth edition - There are new chapters covering software processes, distributed systems architectures, dependability and legacy systems. - Program examples are now in Java and graphical system models are described in the standard UML. - All chapters have been updated and several have been extensively rewritten. Reuse now focuses on component-based development and patterns; object-oriented design has a process focus and uses the UML; the chapters on requirements have been split to cover the requirements themselves and requirements engineering process; cost estimation has been updated to include the COCOMO 2 model. - The chapters on critical systems has been restructured so that reliability, safety, availability and security are integrated in chapters on critical systems specification, development and validation. - The section on formal specification has been cut to a single chapter and material on CASE has been integrated with the chapters covering the processes supported. Functional design has been incorporated in the new chapter on legacy systems. The book's web site (www.software-engin.com) includes links to material to support the use of the book in teaching and personal study. It includes an instructor's manual, overhead transparencies, source code of the program examples and additional material on CASE and formal specification. Ian Sommerville is Professor of Software Engineering at Lancaster University, England. He has more than 20 years of experience in software engineering education and research. His current areas of interest include computer-based systems engineering, requirements engineering, system dependability and software evolution.";"privates Exemplar";"http://bks5.books.google.de/books?id=Uoo_AQAAIAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780201398151";"en";"TAB 2.57";"693";"http://books.google.de/books?id=Uoo_AQAAIAAJ&dq=isbn:9780201398151&hl=&cd=1&source=gbs_api";;"BOOK";"Addison Wesley";"6th edition";"Software engineering";"0"
"30003";"Ian Sommerville";"0.0";"S";"18.09.2013";"01.03.2012";;"privates Exemplar";;"9783868940992";"en";"TAB 2.57";"845";"http://books.google.de/books?id=wxPnLwEACAAJ&dq=isbn:9783868940992&hl=&cd=1&source=gbs_api";;"BOOK";;"9. Ausgabe";"Software Engineering";"0"
"30004";"Chris Rupp; Stefan Queins; Barbara Zengler";"0.0";"UML (Programming language)";"18.09.2013";"01.01.2007";;"privates Exemplar";"http://bks7.books.google.de/books?id=bDvW5_08l4wC&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783446411180";"de";"TAB 2.57";"554";"http://books.google.de/books?id=bDvW5_08l4wC&dq=isbn:9783446411180&hl=&cd=1&source=gbs_api";;"BOOK";"Hanser Verlag";;"UML 2 glasklar";"0"
"30005";"Bernd Müller";"0.0";"Programmierung";"18.09.2013";"01.10.2010";;"privates Exemplar";;"9783446419926";"de";"TAB 2.57";"497";"http://books.google.de/books?id=jFzoPwAACAAJ&dq=isbn:9783446419926&hl=&cd=1&source=gbs_api";;"BOOK";;;"JavaServer Faces";"0"
"30006";"Helmult Balzert";"0.0";"Software-Engineering";;"01.01.2011";;"privates Exemplar";;"9783827417060";"de";"TAB 2.57";"0";;;"BOOK";"Spektrum";"Entwurf, Implementierung, Installation und Betrieb; 3. Auflage";"Lehrbuch der Softwaretechnik";"0"
"30007";"Roger S. Pressman";"0.0";"Software-Engineering";"18.09.2013";"01.01.1997";"This text has been fully revised to reflect the latest software engineering practice. It includes material on e-commerce, Java, UML, while a new chapter on web engineering addresses formulating, analysing and testing web-based applications.";"privates Exemplar";;"9780077094119";"en";"TAB 2.57";"885";"http://books.google.de/books?id=vt-YPwAACAAJ&dq=isbn:9780077094119&hl=&cd=1&source=gbs_api";;"BOOK";"McGraw-Hill";;"Software Engineering";"0"
"30008";"Jochen Ludewig; Horst Lichter";"0.0";"Software-Engineering";"18.09.2013";"01.01.2006";;"privates Exemplar";"http://bks8.books.google.de/books?id=CnfmAAAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783898642682";"de";"TAB 2.57";"618";"http://books.google.de/books?id=CnfmAAAACAAJ&dq=isbn:9783898642682&hl=&cd=1&source=gbs_api";;"BOOK";;;"Bausteine des Software Engineering";"0"
"30009";"Paul Ammann; Jeff Offutt";"0.0";"Test";"18.09.2013";"28.01.2008";"Teaches students an innovative and successful approach to software testing. Resources for instructors (e.g. PowerPoint slides, solutions) on supporting website.";"privates Exemplar";"http://bks9.books.google.de/books?id=leokXF8pLY0C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780521880381";"en";"TAB 2.57";"322";"http://books.google.de/books?id=leokXF8pLY0C&printsec=frontcover&dq=isbn:9780521880381&hl=&cd=1&source=gbs_api";;"BOOK";"Cambridge University Press";;"Introduction to Software Testing";"0"
"30010";"Andreas Spillner; Tilo Linz";"0.0";"Test";"18.09.2013";"01.01.2005";;"privates Exemplar";;"9783898643580";"de";"TAB 2.57";"276";"http://books.google.de/books?id=EM4zAAAACAAJ&dq=isbn:9783898643580&hl=&cd=1&source=gbs_api";;"BOOK";"dpunkt";;"Basiswissen Softwaretest";"0"
"30011";"Heide Faeskorn-Woyke; Birgit Bertelsmeier; Petra Riemer; Elena Bauer";"0.0";"Datenbanken";"18.09.2013";"01.06.2007";;"privates Exemplar";"http://bks7.books.google.de/books?id=MY7oGQAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783827372666";"de";"TAB 2.57";"512";"http://books.google.de/books?id=MY7oGQAACAAJ&dq=isbn:9783827372666&hl=&cd=1&source=gbs_api";;"BOOK";;;"Datenbanksysteme";"0"
"30012";"Ramez A. Elmasri; Shamkant B. Navathe";"0.0";"Datenbanken";"18.09.2013";"01.01.2009";;"privates Exemplar";"http://bks6.books.google.de/books?id=REgdRECfcRIC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9783868940121";"de";"TAB 2.57";"550";"http://books.google.de/books?id=REgdRECfcRIC&printsec=frontcover&dq=isbn:9783868940121&hl=&cd=1&source=gbs_api";;"BOOK";"Pearson Deutschland GmbH";;"Grundlagen von Datenbanksystemen";"0"
"30013";"Philippe Kruchten";"0.0";"Prozess";"18.09.2013";"01.01.2004";;"privates Exemplar";;"9780321179906";"en";"TAB 2.57";"0";;;"BOOK";"Addison-Wesley";"3rd edition";"The Rational Unified Process: An Introduction";"0"
"30014";"Jeannine M. Siviy; M. Lynn Penn; Robert W. Stoddard";"0.0";"Prozess";"18.09.2013";"01.01.2008";"'In this book, I have found answers to key questions and misconceptions about the relationship between Six Sigma and the Capability Maturity Model Integration [CMMI]....Among my key takeaways is that the relationship between Six Sigma and CMMI exemplifies one of the principles of S4/IEE: CMMI provides process infrastructure that is needed to support a successful Six Sigma strategy.' —Forrest W. Breyfogle III, CEO, Smarter Solutions, Inc. 'Finally, a book that bridges the software and hardware process tool set. To date, there have been hardware and software engineers who for one reason or another have not communicated their process methods. And so, myths formed that convinced the hardware community that CMMI was only for software and likewise convinced the software community that Six Sigma was only for hardware. It is both refreshing and thought provoking to dispel these myths.' —Jack Ferguson, Manager, SEI Appraisal Program, Software Engineering Institute CMMI and Six Sigma represent two of the best-known process improvement initiatives. Both are designed to enhance work quality and thereby produce business advantages for an organization. It's a misconception that the two are in competition and cannot be implemented simultaneously. Practitioners originally trained in either CMMI or Six Sigma are now finding that the two initiatives work remarkably well together in the pursuit of their common goal. CMMI® and Six Sigma: Partners in Process Improvement focuses on the synergistic, rather than competitive, implementation of CMMI and Six Sigma—with synergy translating to 'faster, better, cheaper' achievement of mission success. Topics range from formation of the value proposition to specific implementation tactics. The authors illustrate how not taking advantage of what both initiatives have to offer puts an organization at risk of sinking time, energy, and money into 'inventing' a solution that already exists. Along the way they debunk a few myths about Six Sigma applications in software. While the authors concentrate on the interoperability of Six Sigma and CMMI, they also recognize that organizations rarely implement only these two initiatives. Accordingly, the discussion turns to the emerging realm of 'multimodel' process improvement and strategies and tactics that transcend models to help organizations effectively knit together a single unified internal process standard. Whether you work in the defense industry, for a commercial organization, or for a government agency—wherever quality and efficiency matter—you'll find this book to be a valuable resource for bridging process issues across domains and building an improvement strategy that succeeds.";"privates Exemplar";"http://bks5.books.google.de/books?id=9iL6mAEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780321516084";"en";"TAB 2.57";"324";"http://books.google.de/books?id=9iL6mAEACAAJ&dq=isbn:9780321516084&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley Professional";;"CMMI and Six Sigma";"0"
"30015";"Ralf Kneuper";"0.0";"Prozess";"18.09.2013";"01.01.2006";;"privates Exemplar";"http://bks6.books.google.de/books?id=lAQ-AAAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783898643733";"de";"TAB 2.57";"271";"http://books.google.de/books?id=lAQ-AAAACAAJ&dq=isbn:9783898643733&hl=&cd=1&source=gbs_api";;"BOOK";"dpunkt";"2te Auflage";"CMMI";"0"
"30016";"Kent Beck";"0.0";"Prozess";"18.09.2013";"01.01.2000";"Beck wants to encourage readers to re-examine their preconceptions of how software development ought to occur. He does just that in this overview of Extreme Programming, a controversial approach to software development which challenges the notion that the cost of changing a piece of software must rise dramatically over the course of time.";"privates Exemplar";"http://bks8.books.google.de/books?id=G8EL4H4vf7UC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780201616415";"en";"TAB 2.57";"190";"http://books.google.de/books?id=G8EL4H4vf7UC&printsec=frontcover&dq=isbn:9780201616415&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley Professional";;"Extreme Programming Explained";"0"
"30017";"John Barnes";"0.0";"Prozess";"18.09.2013";"01.01.2006";"Ada has carved itself a niche in the safety-critical/embedded/real-time areas. It is the language of choiceáin application areas where reliability, long term maintainability and similar features are very important. Typical of such areas are defence embedded systems, railway signalling, air traffic control and so on. Note especially that SPARK which is very successful for critical systems is based on Ada. No other language really has a suitable underlying structure.This latest edition of the highly successful 'Programming in Ada' has been fully updated to the latest version of the language: Ada 2005.";"Uni-Bibliothek";"http://bks2.books.google.de/books?id=Hlk_AQAAIAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780321340788";"en";"TAB 2.57";"828";"http://books.google.de/books?id=Hlk_AQAAIAAJ&dq=isbn:9780321340788&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley";;"Programming in Ada 2005";"0"
"30018";"Giuseppe Di Battista";"0.0";"Prozess";"18.09.2013";"01.01.1999";"This book is designed to describe fundamental algorithmic techniques for constructing drawings of graphs. Suitable as a book or reference manual, its chapters offer an accurate, accessible reflection of the rapidly expanding field of graph drawing.";"Uni-Bibliothek";"http://bks4.books.google.de/books?id=Dt4eAQAAIAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780133016154";"en";"TAB 2.57";"397";"http://books.google.de/books?id=Dt4eAQAAIAAJ&dq=isbn:9780133016154&hl=&cd=1&source=gbs_api";;"BOOK";"Egully.com";;"Graph drawing";"0"
"30019";"John Barnes";"0.0";"Prozess";"18.09.2013";"01.01.2006";"Ada has carved itself a niche in the safety-critical/embedded/real-time areas. It is the language of choiceáin application areas where reliability, long term maintainability and similar features are very important. Typical of such areas are defence embedded systems, railway signalling, air traffic control and so on. Note especially that SPARK which is very successful for critical systems is based on Ada. No other language really has a suitable underlying structure.This latest edition of the highly successful 'Programming in Ada' has been fully updated to the latest version of the language: Ada 2005.";"privates Exemplar";"http://bks2.books.google.de/books?id=Hlk_AQAAIAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780321340788";"en";"TAB 2.57";"828";"http://books.google.de/books?id=Hlk_AQAAIAAJ&dq=isbn:9780321340788&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley";;"Programming in Ada 2005";"0"
"30020";"Markus Dahm";"0.0";"Interaktion";"18.09.2013";"01.01.2006";;"privates Exemplar";;"9783827371751";"de";"TAB 2.57";"367";"http://books.google.de/books?id=-H8-AQAACAAJ&dq=isbn:9783827371751&hl=&cd=1&source=gbs_api";;"BOOK";;;"Grundlagen der Mensch-Computer-Interaktion";"0"
"30021";"Václav Rajlich";"0.0";"Software-Engineering";"18.09.2013";"01.01.2012";"Software Engineering: The Current Practice teaches students basic software engineering skills and helps practitioners refresh their knowledge and explore recent developments in the field, including software changes and iterative processes of software development. After a historical overview and an introduction to software technology and models, the book discusses the software change and its phases, including concept location, impact analysis, refactoring, actualization, and verification. It then covers the most common iterative processes: agile, directed, and centralized processes. The text also journeys through the software life span from the initial development of software from scratch to the final stages that lead toward software closedown. For Professionals The book gives programmers and software managers a unified view of the contemporary practice of software engineering. It shows how various developments fit together and fit into the contemporary software engineering mosaic. The knowledge gained from the book allows practitioners to evaluate and improve the software engineering processes in their projects. For Instructors Instructors have several options for using this classroom-tested material. Designed to be run in conjunction with the lectures, ideas for student projects include open source programs that use Java or C++ and range in size from 50 to 500 thousand lines of code. These projects emphasize the role of developers in a classroom-tailored version of the directed iterative process (DIP). For Students Students gain a real understanding of software engineering processes through the lectures and projects. They acquire hands-on experience with software of the size and quality comparable to that of industrial software. As is the case in the industry, students work in teams but have individual assignments and accountability.";"privates Exemplar";"http://bks7.books.google.de/books?id=aK70_4xevYsC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9781439841228";"en";"TAB 2.57";"291";"http://books.google.de/books?id=aK70_4xevYsC&printsec=frontcover&dq=isbn:9781439841228&hl=&cd=1&source=gbs_api";;"BOOK";"CRC Press";"The Current Practice";"Software Engineering";"0"
"30022";"Albert Endres; Hans Dieter Rombach";"0.0";"Software-Engineering";"18.09.2013";"01.01.2003";"Annotation This handbook presents the laws that significantly impact software engineering. This book begins with requirements definitions and concludes with maintenance and withdrawl. Along the way, it identifies and discusses existing laws that significantly impact software engineering. Software engineers who wish to reacquaint (or ecquaint) themselves with the basic laws of software engineering and their applicability in an industrial setting.";"privates Exemplar";"http://bks2.books.google.de/books?id=QrsBoLfyD1IC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780321154200";"en";"TAB 2.57";"327";"http://books.google.de/books?id=QrsBoLfyD1IC&printsec=frontcover&dq=isbn:9780321154200&hl=&cd=1&source=gbs_api";;"BOOK";"Pearson Education";;"A Handbook of Software and Systems Engineering";"0"
"30023";"Paul Clements";"0.0";"Software-Architektur";"18.09.2013";"01.01.2003";"The definitive practitioner's guide to capturing and documenting software architecture. -- Documenting architecture so designers and implementers can use it as a framework for effective development. -- Shows how to document the key information associated with each architectural view -- and package that information in coherent, usable form. -- Works with any language, notation system, or view-based model of software architecture. Architecture is crucial to the success of any large software system -- but even a superb architecture will fail if it isn't communicated well. Now, there's a language- and notation-independent guide to capturing architecture so it can be used successfully by every analyst, software designer, and developer. The authors review the diverse goals and uses of software architecture documentation, providing documentation strategies for several common scenarios. They identify the basic unit of software architecture documentation: the viewtype, which specifies the type of information to be provided in an architectural view. For each viewtype -- Modules, Component-and-Connectors, and Allocation -- they offer detailed guidance on documenting what really matters. Next, they demonstrate how to package architecture documentation in coherent, usable form: augmenting architectural views with documentation of interfaces and behavior; accounting for architectural variability and dynamic systems; and more.";"privates Exemplar";"http://bks3.books.google.de/books?id=ASc9HYPkr4sC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780201703726";"en";"TAB 2.57";"512";"http://books.google.de/books?id=ASc9HYPkr4sC&printsec=frontcover&dq=isbn:9780201703726&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley Professional";;"Documenting Software Architectures";"0"
"30024";"Frank Buschmann";"0.0";"Software-Architektur";"18.09.2013";"08.10.1996";"Pattern - Oriented Software Architecture A System of Patterns Frank Buschmann, Regine Meunier, Hans Rohnert, Peter Sommerlad, Michael Stal of Siemens AG, Germany Pattern-oriented software architecture is a new approach to software development. This book represents the progression and evolution of the pattern approach into a system of patterns capable of describing and documenting large-scale applications. A pattern system provides, on one level, a pool of proven solutions to many recurring design problems. On another it shows how to combine individual patterns into heterogeneous structures and as such it can be used to facilitate a constructive development of software systems. Uniquely, the patterns that are presented in this book span several levels of abstraction, from high-level architectural patterns and medium-level design patterns to low-level idioms. The intention of, and motivation for, this book is to support both novices and experts in software development. Novices will gain from the experience inherent in pattern descriptions and experts will hopefully make use of, add to, extend and modify patterns to tailor them to their own needs. None of the pattern descriptions are cast in stone and, just as they are borne from experience, it is expected that further use will feed in and refine individual patterns and produce an evolving system of patterns. Visit our Web Page http://www.wiley.com/compbooks/";"privates Exemplar";"http://bks2.books.google.de/books?id=gJjgAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780471958697";"en";"TAB 2.57";"457";"http://books.google.de/books?id=gJjgAAAAMAAJ&dq=isbn:9780471958697&hl=&cd=1&source=gbs_api";;"BOOK";"John Wiley & Sons";"Volume 1: A System of Patterns";"Pattern-oriented software architecture";"0"
"30025";"Frank Buschmann";"0.0";"Software-Architektur";"18.09.2013";"01.02.2011";"Pattern - Oriented Software Architecture A System of Patterns Frank Buschmann, Regine Meunier, Hans Rohnert, Peter Sommerlad, Michael Stal of Siemens AG, Germany Pattern-oriented software architecture is a new approach to software development. This book represents the progression and evolution of the pattern approach into a system of patterns capable of describing and documenting large-scale applications. A pattern system provides, on one level, a pool of proven solutions to many recurring design problems. On another it shows how to combine individual patterns into heterogeneous structures and as such it can be used to facilitate a constructive development of software systems. Uniquely, the patterns that are presented in this book span several levels of abstraction, from high-level architectural patterns and medium-level design patterns to low-level idioms. The intention of, and motivation for, this book is to support both novices and experts in software development. Novices will gain from the experience inherent in pattern descriptions and experts will hopefully make use of, add to, extend and modify patterns to tailor them to their own needs. None of the pattern descriptions are cast in stone and, just as they are borne from experience, it is expected that further use will feed in and refine individual patterns and produce an evolving system of patterns. Visit our Web Page http://www.wiley.com/compbooks/";"privates Exemplar";;"9780471606956";"en";"TAB 2.57";"633";;;"BOOK";"John Wiley & Sons";"Volume 2: Patterns for Concurrent and Networked Objects";"Pattern-oriented software architecture";"0"
"30026";"Thilo Mende";"0.0";"Software-Qualität";"18.09.2013";"01.01.2012";;"privates Exemplar";;"9783869915005";"en";"TAB 2.57";"200";"http://books.google.de/books?id=pB6ZtwAACAAJ&dq=isbn:9783869915005&hl=&cd=1&source=gbs_api";;"BOOK";"MV Wissenschaft";"Dissertation";"On the Evaluation of Defect Prediction Models";"0"
"30027";"Thilo Mende";"0.0";"Software-Qualität";"18.09.2013";"01.01.2012";;"privates Exemplar";;"9783869915005";"en";"TAB 2.57";"200";"http://books.google.de/books?id=pB6ZtwAACAAJ&dq=isbn:9783869915005&hl=&cd=1&source=gbs_api";;"BOOK";"MV Wissenschaft";"Dissertation";"On the Evaluation of Defect Prediction Models";"0"
"30028";"Norman E. Fenton; Shari Lawrence Pfleeger";"0.0";"Metriken";"18.09.2013";"01.01.1997";"The Second Edition of SOFTWARE METRICS provides an up-to-date, coherent, and rigorous framework for controlling, managing, and predicting software development processes.";"privates Exemplar";"http://bks0.books.google.de/books?id=-HsZAQAAIAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9781850322757";"en";"TAB 2.57";"638";"http://books.google.de/books?id=-HsZAQAAIAAJ&dq=isbn:9781850322757&hl=&cd=1&source=gbs_api";;"BOOK";"Thomson Computer Press";"A Rigorous and Practical Approach";"Software metrics";"0"
"30029";"Robert K. Yin";"0.0";"Empirie";"18.09.2013";"01.01.2003";"This new edition of the best-selling Case Study Research has been carefully revised, updated, and expanded while retaining virtually all of the features and coverage of the Second Edition. Robert Yin's comprehensive presentation covers all aspects of the case study method--from problem definition, design, and data collection, to data analysis and composition and reporting. Yin also traces the uses and importance of case studies to a wide range of disciplines, from sociology, psychology and history to management, planning, social work, and education.";"Uni-Bibliothek";"http://bks0.books.google.de/books?id=45ADMg9AA7YC&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780761925538";"en";"TAB 2.57";"181";"http://books.google.de/books?id=45ADMg9AA7YC&dq=isbn:9780761925538&hl=&cd=1&source=gbs_api";;"BOOK";"SAGE";;"Case Study Research";"0"
"30030";"Joachim Goll";"0.0";"Software-Architektur";"18.09.2013";"20.04.2011";"Software ist ein unverzichtbarer Anteil zahlreicher heutiger Systeme. Ihre Erstellung beinhaltet im Idealfall einen standardisierten, methodischen Entwicklungsprozess, der für alle am Projekt Beteiligten verständlich ist und quasi die Sprache des Projekts darstellt. Das Hauptziel dieses Buches ist die methodische, stabile und standardisierte Konstruktion von Software-Systemen. Behandelt werden hier insbesondere die einzelnen Schritte der Entwicklung, nämlich das Erstellen von Requirements, funktionsorientierte, datenorientierte und objektorientierte Konzepte für die Systemanalyse und den Systementwurf, sowie das Testen von Systemen. Entwurfs- und Architekturmuster sowie aspektorientierte Ansätze runden das Spektrum dieses Buches ab.";"privates Exemplar";"http://bks9.books.google.de/books?id=HzV52b-UtfsC&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783834815781";"de";"TAB 2.57";"995";"http://books.google.de/books?id=HzV52b-UtfsC&dq=isbn:9783834815781&hl=&cd=1&source=gbs_api";;"BOOK";"Vieweg+teubner Verlag";;"Methoden und Architekturen der Softwaretechnik";"0"
"30031";"Christine Hoffmeister; Robert Nord; Dilip Soni";"0.0";"Software-Architektur";"18.09.2013";"01.01.2000";"'Applied Software Architecture' provides practical guidelines and techniques for producing quality software designs. It gives an overview of software architecture basics and a detailed guide to architecture design tasks, focusing on four fundamental views";"privates Exemplar";"http://bks8.books.google.de/books?id=3klAPCIB3hQC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780201325713";"en";"TAB 2.57";"397";"http://books.google.de/books?id=3klAPCIB3hQC&printsec=frontcover&dq=isbn:9780201325713&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley";;"Applied software architecture";"0"
"30032";"Ralph Johnson; Erich Gamma; John Vlissides; Richard Helm";"0.0";"Software-Architektur";"18.09.2013";"01.01.1995";"Capturing a wealth of experience about the design of object-oriented software, four top-notch designers present a catalog of simple and succinct solutions to commonly occurring design problems. Previously undocumented, these 23 patterns allow designers to create more flexible, elegant, and ultimately reusable designs without having to rediscover the design solutions themselves. The authors begin by describing what patterns are and how they can help you design object-oriented software. They then go on to systematically name, explain, evaluate, and catalog recurring designs in object-oriented systems. With Design Patterns as your guide, you will learn how these important patterns fit into the software development process, and how you can leverage them to solve your own design problems most efficiently. Each pattern describes the circumstances in which it is applicable, when it can be applied in view of other design constraints, and the consequences and trade-offs of using the pattern within a larger design. All patterns are compiled from real systems and are based on real-world examples. Each pattern also includes code that demonstrates how it may be implemented in object-oriented programming languages like C++ or Smalltalk. 0201633612B07092001";"privates Exemplar";"http://bks6.books.google.de/books?id=iyIvGGp2550C&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780201633610";"en";"TAB 2.57";"395";"http://books.google.de/books?id=iyIvGGp2550C&dq=isbn:9780201633610&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley";;"Design Patterns";"0"
"30033";"Klaus Pohl";"0.0";"Requirements-Engineering";"18.09.2013";"01.05.2008";;"privates Exemplar";;"9783898645508";"en";"TAB 2.57";"748";"http://books.google.de/books?id=R0FxMwEACAAJ&dq=isbn:9783898645508&hl=&cd=1&source=gbs_api";;"BOOK";;"2te Auflage";"Requirements Engineering";"0"
"30034";"Gerd Beneken; Ulrike Hammerschall";"0.0";"Requirements-Engineering";"18.09.2013";"01.04.2013";;"privates Exemplar";;"9783868941517";"de";"TAB 2.57";"448";"http://books.google.de/books?id=5lszlQEACAAJ&dq=isbn:9783868941517&hl=&cd=1&source=gbs_api";;"BOOK";;;"Software Requirements";"0"
"30035";"Harald Störrle";"0.0";"UML";"18.09.2013";"01.01.2005";;"privates Exemplar";"http://bks6.books.google.de/books?id=SXU-AAAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783827371430";"de";"TAB 2.57";"220";"http://books.google.de/books?id=SXU-AAAACAAJ&dq=isbn:9783827371430&hl=&cd=1&source=gbs_api";;"BOOK";;;"UML 2 für Studenten";"0"
"30036";"Daniel Galin";"0.0";"Software-Qualität";"18.09.2013";"01.01.2004";"Software quality assurance (SQA) systems are vital for software developers in the software and the electronics industries as well as for information systems divisions in organizations. This book, based on many years of consulting and teaching experience, is designed to serve three audiences: students at universities and colleges, participants in vocational training courses in the industry and practitioners/professionals. Each chapter will conclude with commonly raised questions, problems, short case studies, and topics for discussion. The methodology to be presented in the book conforms with the requirements of ISO 9000 standards (ISO 9001 Quality Management and Quality Assurance Standard and of ISO 9000-3 Guidelines for the Application of ISO 9001 to the Development, Supply, Installation and Maintenance of Computer Software). The topics that will be covered will conform with the requirements of most vocational training programs (e.g.. the American Society for Quality's training program for Certified Software Quality Engineers). The book is designed to include in its appendices a collection of useful templates and checklists containing items of great interest to practitioners and students, and is accompanied with an Instructor s Guide containing lesson planning guidelines, guides for conducting discussions, OHPs and test material.";"privates Exemplar";"http://bks8.books.google.de/books?id=p5jDETUc2K8C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780201709452";"en";"TAB 2.57";"590";"http://books.google.de/books?id=p5jDETUc2K8C&printsec=frontcover&dq=isbn:9780201709452&hl=&cd=1&source=gbs_api";;"BOOK";"Pearson Education";;"Software Quality Assurance";"0"
"30037";"Frank Simon; Olaf Seng; Thomas Mohaupt";"0.0";"Software-Qualität; Wartung";"18.09.2013";"01.01.2006";;"privates Exemplar";"http://bks8.books.google.de/books?id=IEk8AQAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783898643887";"de";"TAB 2.57";"340";"http://books.google.de/books?id=IEk8AQAACAAJ&dq=isbn:9783898643887&hl=&cd=1&source=gbs_api";;"BOOK";;;"Code Quality Management";"0"
"30038";"Flemming Nielson; Hanne R. Nielson; Chris Hankin";"0.0";"Programmanalyse";"18.09.2013";"01.01.1999";"Program analysis concerns static techniques for computing reliable approximate information about the dynamic behaviour of programs. Applications include compilers (for code improvement), software validation (for detecting errors in algorithms or breaches of security) and transformations between data representation (for solving problems such as the Y2K problem). This book is unique in giving an overview of the four major approaches to program analysis: data flow analysis, constraint based analysis, abstract interpretation, and type and effect systems. The presentation demonstrates the extensive similarities between the approaches; this will aid the reader in choosing the right approach and in enhancing it with insights from the other approaches. The book covers basic semantic properties as well as more advanced algorithmic techniques. The book is aimed at M.Sc. and Ph.D. students but will be valuable also for experienced researchers and professionals.";"privates Exemplar";"http://bks0.books.google.de/books?id=RLjt0xSj8DcC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9783540654100";"en";"TAB 2.57";"450";"http://books.google.de/books?id=RLjt0xSj8DcC&printsec=frontcover&dq=isbn:9783540654100&hl=&cd=1&source=gbs_api";;"BOOK";"Springer";;"Principles of Program Analysis";"0"
"30039";"Marcus Deininger; Horst Lichter; Jochen Ludewig; Kurt Schneider";"0.0";"Wissenschaftliches Arbeiten";"18.09.2013";"01.01.2002";;"privates Exemplar";;"9783728128157";"de";"TAB 2.57";"72";"http://books.google.de/books?id=8yJhPQAACAAJ&dq=isbn:9783728128157&hl=&cd=1&source=gbs_api";;"BOOK";;;"Studien-Arbeiten";"0"
"30040";"B. J. Winer; Donald R. Brown; Kenneth M. Michels";"0.0";"Statistik";"18.09.2013";"01.01.1991";"A revision of this classic statistics text for first-year graduate students in psychology, education and related social sciences. The two new authors are former students of Winer's. They have updated, rewritten and reorganized the text to fit the course as it is now taught.";"privates Exemplar";"http://bks9.books.google.de/books?id=OqppAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"0070709823";"en";"TAB 2.57";"1057";"http://books.google.de/books?id=OqppAAAAMAAJ&dq=isbn:0070709823&hl=&cd=1&source=gbs_api";;"BOOK";"McGraw-Hill Humanities/Social Sciences/Languages";;"Statistical principles in experimental design";"0"
"30041";"William Venables; B.D. Ripley";"0.0";"Statistik";"18.09.2013";"20.04.2000";"Written by the bestselling authors of 'Modern Applied Statistics with S-Plus', this book provides an in-depth guide to writing software in the S language under the commercial S-PLUS and the Open Source R systems. The book is geared to those with some knowledge of the S language who want to use it more effectively.";"Uni-Bibliothek";"http://bks5.books.google.de/books?id=-rKWRH0fglMC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780387989662";"en";"TAB 2.57";"264";"http://books.google.de/books?id=-rKWRH0fglMC&printsec=frontcover&dq=isbn:9780387989662&hl=&cd=1&source=gbs_api";;"BOOK";"Springer";;"S Programming";"0"
"30042";"William N. Venables; Brian D. Ripley";"0.0";"Statistik";"18.09.2013";"01.01.2002";"Data analysis, computing.";"Uni-Bibliothek";"http://bks5.books.google.de/books?id=GeX9CYd_JTkC&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780387954578";"en";"TAB 2.57";"495";"http://books.google.de/books?id=GeX9CYd_JTkC&dq=isbn:9780387954578&hl=&cd=1&source=gbs_api";;"BOOK";"Springer Verlag";;"Modern applied statistics with S";"0"
"30043";"John M. Chambers";"0.0";"Statistik";"18.09.2013";"19.06.1998";"Here is a thorough and authoritative guide to the latest version of the S language and to its programming environment the premier software platform for computing with data. Programming with Data describes a new and greatly extended version of S and is written by the chief designer of the language. The book is a guide to the complete programming process, starting from simple interactive use and continuing through ambitious software projects. S is designed for computing with data-for any project in which organizing, visualizing, summarizing, or modeling data are central concerns. Its focus is on the needs of the programmer/user, and its goal is 'to turn ideas into software, quickly and faithfully.' S is a functional object-based language with a huge library of functions for all aspects of computing with data. Its long and enthusiastic use in statistics and applied fields has also led to many valuable libraries of user-written functions. The new version of S provides powerful class/method structure, new techniques to deal with large objects, extended interfaces to other languages and files, object-based documentation compatible with HTML, and powerful new interactive programming techniques. This version of S underlies the S-PLUS system, versions 5*0 and higher.";"Uni-Bibliothek";"http://bks9.books.google.de/books?id=Km1IBFZCRPUC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780387985039";"en";"TAB 2.57";"469";"http://books.google.de/books?id=Km1IBFZCRPUC&printsec=frontcover&dq=isbn:9780387985039&hl=&cd=1&source=gbs_api";;"BOOK";"Springer";;"Programming with Data";"0"
"30044";"Jürgen Bortz; Gustav A. Lienert; Klaus Boehnke";"0.0";"Statistik";"18.09.2013";"23.07.2010";"Vertiefung der 'Kurzgefassten Statistik' von Jürgen Bortz Auch ohne mathematische Vorkenntnisse verständlich Mit 47 Signifikanztafeln";"Uni-Bibliothek";"http://bks2.books.google.de/books?id=up_3mAEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783540747062";"de";"TAB 2.57";"930";"http://books.google.de/books?id=up_3mAEACAAJ&dq=isbn:9783540747062&hl=&cd=1&source=gbs_api";;"BOOK";"Springer";;"Verteilungsfreie Methoden in der Biostatistik";"0"
"30045";"Andrew Gelman; John B Carlin; Hal S Stern; Donald B Rubin";"0.0";"Statistik";"18.09.2013";"01.01.2004";"Incorporating new and updated information, this second edition of THE bestselling text in Bayesian data analysis continues to emphasize practice over theory, describing how to conceptualize, perform, and critique statistical analyses from a Bayesian perspective. Its world-class authors provide guidance on all aspects of Bayesian data analysis and include examples of real statistical analyses, based on their own research, that demonstrate how to solve complicated problems. Changes in the new edition include: ·Stronger focus on MCMC·Revision of the computational advice in Part III·New chapters on nonlinear models and decision analysis·Several additional applied examples from the authors' recent research·Additional chapters on current models for Bayesian data analysis such as nonlinear models, generalized linear mixed models, and more·Reorganization of chapters 6 and 7 on model checking and data collectionBayesian computation is currently at a stage where there are many reasonable ways to compute any given posterior distribution. However, the best approach is not always clear ahead of time. Reflecting this, the new edition offers a more pluralistic presentation, giving advice on performing computations from many perspectives while making clear the importance of being aware that there are different ways to implement any given iterative simulation computation. The new approach, additional examples, and updated information make Bayesian Data Analysis an excellent introductory text and a reference that working scientists will use throughout their professional life.";"Uni-Bibliothek";"http://bks1.books.google.de/books?id=BkGCmAEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9781584883883";"en";"TAB 2.57";"668";"http://books.google.de/books?id=BkGCmAEACAAJ&dq=isbn:9781584883883&hl=&cd=1&source=gbs_api";;"BOOK";"Chapman & Hall/CRC";;"Bayesian Data Analysis";"0"
"30046";"Dan Gusfield";"0.0";"Algorithmen";"18.09.2013";"28.05.1997";"This 1997 book describes a range of string problems in computer science and molecular biology and the algorithms developed to solve them.";"Uni-Bibliothek";"http://bks8.books.google.de/books?id=Ofw5w1yuD8kC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780521585194";"en";"TAB 2.57";"534";"http://books.google.de/books?id=Ofw5w1yuD8kC&printsec=frontcover&dq=isbn:9780521585194&hl=&cd=1&source=gbs_api";;"BOOK";"Cambridge University Press";;"Algorithms on Strings, Trees and Sequences";"0"
"30047";"Ilʹja N. Bronštejn";"0.0";"Mathematik";"18.09.2013";"01.01.1984";;"privates Exemplar";;"3871444928";"de";"TAB 2.57";"840";"http://books.google.de/books?id=1prwXwAACAAJ&dq=isbn:3871444928&hl=&cd=1&source=gbs_api";;"BOOK";;;"Taschenbuch der Mathematik";"0"
"30048";"Andrew Gelman; Jennifer Hill";"0.0";"Statistik";"18.09.2013";"01.01.2007";"For the applied researcher performing data analysis using linear and nonlinear regression and multilevel models.";"Uni-Bibliothek";"http://bks1.books.google.de/books?id=lV3DIdV0F9AC&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780521686891";"en";"TAB 2.57";"625";"http://books.google.de/books?id=lV3DIdV0F9AC&dq=isbn:9780521686891&hl=&cd=1&source=gbs_api";;"BOOK";;;"Data Analysis Using Regression and Multilevel/Hierarchical Models";"0"
"30049";"David S. Moore; George P. McCabe; Bruce A. Craig";"0.0";"Statistik";"18.09.2013";"01.01.2009";"The new Sixth Edition brings the acclaimed IPS approach to a new generation, with a number of enhancements in the text and with breakthrough media tools for instructors and students. It demonstrates how statistical techniques are used to solve real-world problems, combining real data and applications with innovative pedagogy, both in the text and via electronic media. New Format Options Introduction to the Practice of Statistics, Sixth Edition is available as: • A core book containing the first 13 chapters in hardcover (1-4292-1622-0) or paperback (1-4292-1621-2). Companion chapters 14-17 are available on the book's CD and web site. • Extended Version (hardcover; includes chapters 1-15): 1-4292-1623-9";"Uni-Bibliothek";"http://bks1.books.google.de/books?id=FiZ7SgAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9781429216227";"en";"TAB 2.57";"709";"http://books.google.de/books?id=FiZ7SgAACAAJ&dq=isbn:9781429216227&hl=&cd=1&source=gbs_api";;"BOOK";"W H Freeman & Company";;"Introduction to the Practice of Statistics";"0"
"30050";"Verena Janßen; Manfred Beden";"0.0";"Arbeitsorganisation";"18.09.2013";"07.03.2006";"Bei einem Arbeitszeugnis entscheiden oft Details über einen guten oder schlechten Gesamteindruck. Das Autorenteam Verena Janßen und Manfred Beden hilft Ihnen nicht nur dabei, Ihr Zeugnis und die Notenstufen zu entschlüsseln, sondern zeigt auch, wie Sie selbst mithilfe zahlreicher Textideen und Musterzeugnisse ein perfekt formuliertes Zeugnis erstellen können. Alles Wichtige über internationale Zeugnisse und die rechtlichen Aspekte der Zeugniswelt runden diesen Ratgeber ab.";"privates Exemplar";"http://bks6.books.google.de/books?id=S7MoZjp7o9wC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9783774288508";"de";"TAB 2.57";"128";"http://books.google.de/books?id=S7MoZjp7o9wC&printsec=frontcover&dq=isbn:9783774288508&hl=&cd=1&source=gbs_api";;"BOOK";"GRÄFE UND UNZER";;"Arbeitszeugnisse Richtig deuten - perfekt formulieren";"0"
"30051";"Lyn Dupré";"0.0";"Wissenschaftliches Arbeiten";"18.09.2013";"01.01.1998";"'How often does a book come along that has you laughing out loud as it improves your writing, especially of technical and scientific material? How often does a book on writing come out aimed at scientists, mathematicians, and computer specialists in the first place? How often does a book on grammar keep you turning the pages from pleasure? Never, you say? Then get this one.' Jef Raskin professional writer and creator of the Apple Macintosh project 'As someone responsible for the creation of numerous bugs, literary and otherwise, I heartily recommend Lyn Dupre's exquisite book: a lucid guide to squishing bugs or, even better, exterminating them before they hatch.' David C. Nagel President, AT&T Labs 'You can borrow my dictionary or steal my thesaurus. Just stay away from my copy of BUGS.' Patrick Henry Winston Massachusetts Institute of Technology 'The quality of scientific and technical writing would increase considerably if this book were required reading for all authors.' The Mathematica Journal 'Lyn's style is wonderful: humorous, enjoyable, and incisive. I even liked the plot.' Peter G. Neumann author of the Dupreved Computer-Related Risks 'Those of us who have worked with Lyn Dupre treasure her keen wit, and, above all, her absolute mastery of writing.' Carver Mead California Institute of Technology 'BUGS in Writing deserves to become a standard. If technical writing isn't your principal activity, but you find yourself doing a lot of it, you should read this book.' IEEE Micro 'This book will help me/you/we a lot/immensely.' Martin Griss Laboratory Scientist and Reuse Rabbi, Hewlett-Packard Laboratories 'Lyn combines an intellectual command of her subject with a madcap imagination to take you on a joyous romp through the English language.' Abraham Silberschatz Lucent Technologies 'I just received a copy of BUGS in Writing, which I think is wonderful. (Reading this sentence again, I realize it is ambiguous; but both its interpretations are true. It is also passive, but since the package was waiting for me when I returned from a trip, it is hard to know just who brought it.)...BUGS will certainly be at my fingertips during the final rewrites. Andrew Koenig author of C Traps and Pitfalls and coauthor of Ruminations on C++ 'I highly recommend BUGS in Writing, by Dupre. It makes an excellent companion to Strunk & White and the Harbrace College Handbook.' Martin D. Carroll coauthor of Designing and Coding Reusable C++ A 'superior' alternative to Strunk and White. Computing Reviews 'This book simply sneaks up like a cat and charms you.' Kitta Reeds SRI International 'Having the examples weave their own story is an outstanding device. Our brains must be wired for learning from stories.' Bruce R. Montague University of California, Santa Cruz 'Ultimately, it is the playfulness and humor of the author that encourages me to keep this book on my working shelf. I wish I'd had Lyn Dupre as my fifth-grade English teacher.' ANPA West Journal 'An earful of bugs that will learn you right from wrong.' Dick Lyon hearing researcher, Caltech, and Senior Scientist, Foveonics, Inc. 'It's hard to describe how easy it is to read this book, except to say that it's the first style book that I have ever read entirely, and for pleasure.' Ellen Levy Finch Expert Support, Inc. 'An indispensible 'bible' for those who believe that clarity and good writing are the key to conveying any message effectively.' Edward H. Shortliffe, MD, PhD Professor and Associate Dean, Stanford University 'Even my cats seemed to like the book.' Denbigh Starkey Montana State University Like a deft and brilliant surgeon Lyn takes your mangled manuscript And dexterously cuts away Those dangling participles Those split infinitives Those fatty adjectives And returns to you An (almost) perfect body Of your work (Marred by only a few Feline paw prints). Lightning quick of mind Motion sure and filled with grace Weapon poised With sharp and blackened point She pounces! Leaps upon her prey! Death to the fractured words The split infinitive The dangling participle! The body stirs at last Returns to life Strengthened, renewed, And ready for The publisher. oTrish Hooper";"privates Exemplar";"http://bks1.books.google.de/books?id=X-J4AAAAIAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780201379211";"en";"TAB 2.57";"668";"http://books.google.de/books?id=X-J4AAAAIAAJ&dq=isbn:9780201379211&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley Professional";;"BUGS in writing";"0"
"30052";"Frank Mittelbach; Michel Goossens";"0.0";"Wissenschaftliches Arbeiten";"18.09.2013";"01.01.2004";;"Uni-Bibliothek";;"9780201362992";;"TAB 2.57";"0";;;;;"2nd edition";"The LaTeX Companion";"0"
"30053";"Langenscheidt";"0.0";"Wissenschaftliches Arbeiten";"18.09.2013";"01.01.1995";;"privates Exemplar";;"3468111215";"en";;"1386";"http://books.google.de/books?id=ymdPnQEACAAJ&dq=isbn:3468111215&hl=&cd=1&source=gbs_api";;"BOOK";"Langenscheidt";;"Englisch - Deutsch / Deutsch - Englisch. Taschenwörterbuch. Langenscheidt.";"0"
"30054";"Duden";"0.0";"Wissenschaftliches Arbeiten";"18.09.2013";"01.01.1982";;"privates Exemplar";;"3411209054";;;"813";;;"BOOK";"Duden";;"Das Fremdwörterbuch";"0"
"30055";"Duden";"0.0";"Wissenschaftliches Arbeiten";"18.09.2013";"01.01.1986";;"privates Exemplar";"http://bks2.books.google.de/books?id=RNAdAQAAIAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"3411209003";"de";;"792";"http://books.google.de/books?id=RNAdAQAAIAAJ&dq=isbn:3411209003&hl=&cd=1&source=gbs_api";;"BOOK";"Duden";;"Duden Rechtschreibung der deutschen Sprache und der Fremdwörter";"0"
"30056";"Serge Demeyer; Stéphane Ducasse; Oscar Marius Nierstrasz";"0.0";"Reengineering";"18.09.2013";"01.01.2003";"Most programmers spend their time working on existing software systems rather than designing new ones. Although object-oriented programming is relatively young, the upkeep of existing object-oriented systems is rapidly gaining attention. This volume explains the renovating of these systems, called reengineering.";"privates Exemplar";"http://bks4.books.google.de/books?id=k5NQAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9781558606395";"en";"TAB 2.57";"282";"http://books.google.de/books?id=k5NQAAAAMAAJ&dq=isbn:9781558606395&hl=&cd=1&source=gbs_api";;"BOOK";"Morgan Kaufmann";;"Object-oriented reengineering patterns";"0"
"30057";"Merriam-Webster, Inc";"0.0";"Wissenschaftliches Arbeiten";"18.09.2013";"01.01.1993";"Features concise definitions, clear pronunciations, illustrations, tables, cross-references, examples of contemporary word use, synonyms, and more";"privates Exemplar";"http://bks2.books.google.de/books?id=555iAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780877797098";"en";"TAB 2.57";"1597";"http://books.google.de/books?id=555iAAAAMAAJ&dq=isbn:9780877797098&hl=&cd=1&source=gbs_api";;"BOOK";"Merriam Webster";;"Merriam-Webster's collegiate dictionary";"0"
"30058";"Sonia Brough; Heinz Messinger";"0.0";"Wissenschaftliches Arbeiten";"18.09.2013";"01.01.1995";"A convenient reference for writers, students, and businesspeople; anyone who needs the right word at the right time.";"privates Exemplar";"http://bks9.books.google.de/books?id=B50nAQAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780887290213";"en";"TAB 2.57";"1515";"http://books.google.de/books?id=B50nAQAAMAAJ&dq=isbn:9780887290213&hl=&cd=1&source=gbs_api";;"BOOK";"Langenscheidt Pub Inc";;"Langenscheidt's new college German dictionary";"0"
"30059";"Jürgen Ebert; Rainer Gimnich; Hans H. Statsch; Andreas Winter (Hrsg.)";"0.0";"Wissenschaftliches Arbeiten";"18.09.2013";"01.01.1998";;"privates Exemplar";;"3923532598";"de";"TAB 2.57";"244";;;;"Fölbach";;"GUPRO: Generische Umgebung zum Programmverstehen";"0"
"30060";"Tom Mens; Serge Demeyer (Hrsg.)";"0.0";"Wissenschaftliches Arbeiten";"18.09.2013";"01.01.2008";;"privates Exemplar";;"9783540764397";;"TAB 2.57";"347";;;"BOOK";"Springer";;"Software-Evolution";"0"
"30061";"Bernd Müller";"0.0";"Software-Evolution";"18.09.2013";"01.01.1997";;"privates Exemplar";"http://bks5.books.google.de/books?id=HKROumm9nOUC&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783519029427";"de";"TAB 2.57";"207";"http://books.google.de/books?id=HKROumm9nOUC&dq=isbn:9783519029427&hl=&cd=1&source=gbs_api";;"BOOK";"Vieweg + Teubner Verlag";;"Reengineering";"0"
"30062";"Thomas M. Pigoski";"0.0";"Software-Evolution";"18.09.2013";"01.01.1997";"Overview of software maintenance; Why maintenance is expensive; Evolution of software processes and models; A recommended sofwate maintenance process; Pre-delivery software maintenance activities; Planning, parts I & II: the maintenance concept and the maintenance plan; Planning, part III: resources; Transition; Transition experiences, part I; Transition experiences, part II; Setting up the software maintenance organization; Tools and environment; Software maintenance metrics; Software maintenance metrics experiences; Maintainability; Sofwtare maintenance management; Education and training; Impact of object oriented technology on software maintenance; Software maintenance resources; The future of software maintenance; Glossary; Bibliography; Index.";"privates Exemplar";"http://bks0.books.google.de/books?id=h7pQAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780471170013";"en";"TAB 2.57";"384";"http://books.google.de/books?id=h7pQAAAAMAAJ&dq=isbn:9780471170013&hl=&cd=1&source=gbs_api";;"BOOK";"Wiley";;"Practical software maintenance";"0"
"30063";"William J. Brown";"0.0";"Software-Evolution";"18.09.2013";"01.01.2004";;"privates Exemplar";"http://bks6.books.google.de/books?id=GMzeAAAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783826614798";"en";"TAB 2.57";"298";"http://books.google.de/books?id=GMzeAAAACAAJ&dq=isbn:9783826614798&hl=&cd=1&source=gbs_api";;"BOOK";;;"AntiPatterns";"0"
"30064";"Franz Lehner";"0.0";"Software-Evolution";"18.09.2013";"01.01.1989";;"privates Exemplar";;"3446156488";"de";"TAB 2.57";"279";"http://books.google.de/books?id=YRXzAAAACAAJ&dq=isbn:3446156488&hl=&cd=1&source=gbs_api";;"BOOK";;;"Nutzung und Wartung von Software";"0"
"30065";"Christoph Bommer; Markus Spindler; Volkert Barr";"0.0";"Software-Evolution";"18.09.2013";"01.06.2008";;"privates Exemplar";;"9783898644822";"de";"TAB 2.57";"314";"http://books.google.de/books?id=NgMpNAAACAAJ&dq=isbn:9783898644822&hl=&cd=1&source=gbs_api";;"BOOK";;;"Software-Wartung";"0"
"30066";"Michele Lanza; Radu Marinescu";"0.0";"Software-Evolution";"18.09.2013";"01.01.2006";;"privates Exemplar";;"9783540244295";"en";"TAB 2.57";"205";;;;"Springer";"Using Software Metrics to Characterize, Evaluate; and Improve the Design of Object-Oriented Systems";"Object-Oriented Metrics in Practicwe";"0"
"30067";"Martin Lippert; Stephen Roock";"0.0";"Software-Evolution";"18.09.2013";"05.06.2006";"Large Refactorings looks at methods of establish design improvements as an important and independent activity during development of software, and will help to ensure that software continues to adapt, improve and remain easy to read and modify without altering its observable behaviour. It provides real-world experience from real refactored projects and shows how to refactor software to ensure that it is efficient, fresh and adaptable";"privates Exemplar";"http://bks8.books.google.de/books?id=erBQAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780470858929";"en";"TAB 2.57";"280";"http://books.google.de/books?id=erBQAAAAMAAJ&dq=isbn:9780470858929&hl=&cd=1&source=gbs_api";;"BOOK";"Wiley";;"Refactoring in large software projects";"0"
"30068";"Robert C. Seacord; DANIEL AUTOR PLAKOSH; GRACE A AUTOR LEWIS";"0.0";"Software-Evolution";"18.09.2013";"01.01.2003";"Most organizations rely on complex enterprise information systems (EISs) to codify their business practices and collect, process, and analyze business data. These EISs are large, heterogeneous, distributed, constantly evolving, dynamic, long-lived, and mission critical. In other words, they are a complicated system of systems. As features are added to an EIS, new technologies and components are selected and integrated. In many ways, these information systems are to an enterprise what a brain is to the higher species--a complex, poorly understood mass upon which the organism relies for its very existence. To optimize business value, these large, complex systems must be modernized--but where does one begin? This book uses an extensive real-world case study (based on the modernization of a thirty year old retail system) to show how modernizing legacy systems can deliver significant business value to any organization.";"privates Exemplar";"http://bks1.books.google.de/books?id=sZsy2X1EA9UC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780321118844";"en";"TAB 2.57";"332";"http://books.google.de/books?id=sZsy2X1EA9UC&printsec=frontcover&dq=isbn:9780321118844&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley Professional";;"Modernizing Legacy Systems";"0"
"30069";"Dieter Masak";"0.0";"Software-Evolution";"18.09.2013";"01.01.2006";"Die Software heutiger Unternehmen besteht zum gröÃten Teil aus Altsystemen, die zwischen fünf und dreiÃig Jahren alt sein können. In der heutigen Softwareliteratur wird vorwiegend die Schaffung und Konzeption von neuen Systemen behandelt. Ziel dieses Buches ist es dagegen, eine Darstellung der Entwicklungsmöglichkeiten und Strategien für die Altsysteme aufzuzeigen. Dabei beschäftigt sich der Autor auch mit folgenden Fragen: Wie kann die Wartung besser werden? Muss man wirklich ablösen? Wie funktioniert der Ersatz durch Standardsoftware?";"privates Exemplar";"http://bks3.books.google.de/books?id=_ADkwozCvegC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9783540254126";"de";"TAB 2.57";"434";"http://books.google.de/books?id=_ADkwozCvegC&printsec=frontcover&dq=isbn:9783540254126&hl=&cd=1&source=gbs_api";;"BOOK";"Springer DE";;"Legacysoftware";"0"
"30070";"Harry M. Sneed; Martin Hasitschka; Maria-Therese Teichmann";"0.0";"Software-Evolution";"18.09.2013";"01.01.2005";"Über 75% der Softwarespezialisten sind heute mit Wartung und Weiterentwicklung bestehender Softwaresysteme beschäftigt. Das Buch beschreibt anhand von zahlreichen Fallstudien die Planung, Organisation und Steuerung der Wartungs- und Weiterentwicklungsaktivitäten im Rahmen des Software-Produktlebenszyklus sowie die dafür erforderliche Infrastruktur. Es werden sowohl die Aufbau- als auch die Ablauforganisation eines Wartungsbetriebes beschrieben und Verfahren, Techniken und Tools zur Durchführung der Wartungsaufgaben vorgestellt. Der Schwerpunkt liegt dabei auf der täglichen Praxis des Softwarespezialisten; die Theorie wird bei Bedarf erklärt. Die Leser des Buches werden lernen: ... was Softwarewartung von Softwareentwicklung unterscheidet, ... welchen Zwängen die Softwarewartung und -evolution unterliegt, ... wie ein ordentlicher Wartungsbetrieb zu organisieren ist, ... wie Wartungsprojekte definiert, organisiert, geplant und gesteuert werden, ... wie Fehlermeldungen und Change Requests zu behandeln sind, ... wie Software - Code, Test und Dokumentation - fortzuschreiben ist, ... wie Softwaresysteme verwaltet werden ... wie veränderte Systeme zu testen sind, ... wie die Qualität der bestehender Anwendungssysteme trotz ständiger Veränderung aufrechtzuerhalten ist.";"privates Exemplar";"http://bks0.books.google.de/books?id=N-anAAAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783898642743";"de";"TAB 2.57";"434";"http://books.google.de/books?id=N-anAAAACAAJ&dq=isbn:9783898642743&hl=&cd=1&source=gbs_api";;"BOOK";;;"Software-Produktmanagement";"0"
"30071";"Jan Bosch";"0.0";"Software-Architektur";"18.09.2013";"01.01.2000";"This book provides an achievable answer. The author proposes a method for designing software architectures, and product line architectures, which is based on his experience in industry and research. The first part of the book introduces the design method,";"privates Exemplar";"http://bks6.books.google.de/books?id=FDfyWknLvMYC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780201674941";"en";"TAB 2.57";"354";"http://books.google.de/books?id=FDfyWknLvMYC&printsec=frontcover&dq=isbn:9780201674941&hl=&cd=1&source=gbs_api";;"BOOK";"Pearson Education";;"Design and Use of Software Architectures";"0"
"30072";"Oliver Vogel; Ingo Arnold; Arif Chughtai; Edmund Ihler; Uwe Mehlig; Thomas Neumann, Dr; Markus Volter; Uwe Zdun";"0.0";"Software-Architektur";"18.09.2013";"01.01.2005";"Als Architekt arbeiten Sie in einem sehr vielf'ltigen und dynamischen Umfeld. Neue Technologien dr'ngen auf den Markt, neue Werkzeuge versprechen Effizienz- und Produktivit'tssteigerungen und neue Architekturkonzepte, wie Serviceorientierung und modellgetriebene Verfahren sollen Ihnen helfen, mit der inh'renten Komplexit't von IT-Systemen umzugehen. All diese Entwicklungen und Neuerungen m'ssen Sie als Architekt verstehen, einordnen und letztlich beurteilen k'nnen, um die Spreu vom Weizen zu trennen und f'r Ihre konkrete Problemstellung die passende L'sung zu w'hlen. Dieses Buch hilft Ihnen dabei, indem es das Thema Software-Architektur umfassend behandelt und mit Hilfe eines architektonischen Ordnungsrahmens strukturiert. Es stellt Sie als Architekten in den Mittelpunkt und bietet Ihnen langfristige Orientierung. Das Buch vermittelt hierzu essenzielles Architektur-Wissen und zeigt Ihnen, wie Sie dieses Wissen konkret und in entsprechenden Projekten einsetzen k'nnen. Zu diesem Zweck enth'lt das Buch Anwendungsszenarien und Fallstudien aus verschiedenen Industriezweigen und Anwendungsdom'nen. Software-Entwickler und Studenten erhalten mit diesem Buch eine wertvolle Hilfestellung, um in das Thema Software-Architektur einzusteigen. Weiterf'hrende Informationen finden Sie unter www.software-architektur-buch.de.";"privates Exemplar";"http://bks0.books.google.de/books?id=gwO3AAAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783827415349";"de";"TAB 2.57";"550";"http://books.google.de/books?id=gwO3AAAACAAJ&dq=isbn:9783827415349&hl=&cd=1&source=gbs_api";;"BOOK";"Spektrum Akademischer Verlag";;"Software-Architektur";"0"
"30073";"Ingo Arnold; Arif Chughtai; Edmund Ihler; Timo Kehrer; Uwe Mehlig; Uwe Zdun";"0.0";"Software-Architektur";"18.09.2013";"26.11.2008";"(Autor) O. Vogel et al. (Titel) Software-Architektur (Untertitel) Grundlagen - Konzepte - Praxis (HL) Der umfassende Einstieg in die Software – Architektur! (copy) Dieser Titel behandelt das Thema Software- Architektur umfassend und strukturiert die Thematik mit Hilfe eines architektonischen Ordnungsrahmens. Es stellt den 'Architekten' in den Mittelpunkt und bietet ihm langfristige Orientierung. Das Buch vermittelt essenzielles Wissen und zeigt, wie das erworbene Wissen konkret und in entsprechenden Projekten eingesetzt werden kann. Zu diesem Zweck enthält das Buch Anwendungsszenarien und Fallstudien aus verschiedenen Industriezweigen und Anwendungsdomänen. Das optimale Einstiegswerk für Softwareentwickler und Studenten. (Biblio)";"privates Exemplar";"http://bks2.books.google.de/books?id=2xsK1-YJgZ8C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9783827419330";"de";"TAB 2.57";"556";"http://books.google.de/books?id=2xsK1-YJgZ8C&printsec=frontcover&dq=isbn:9783827419330&hl=&cd=1&source=gbs_api";;"BOOK";"Springer";;"Software-Architektur";"0"
"30074";"Wilhelm Hasselbring";"0.0";"Software-Architektur";"18.09.2013";"01.01.2008";;"privates Exemplar";;"9783898645591";"de";"TAB 2.57";"575";"http://books.google.de/books?id=zu4yPQAACAAJ&dq=isbn:9783898645591&hl=&cd=1&source=gbs_api";;"BOOK";;;"Handbuch der Software-Architektur";"0"
"30075";"Len Bass; Paul Clements; Rick Kazman";"0.0";"Software-Architektur";"18.09.2013";"01.01.2003";"This award-winning book, substantially updated to reflect the latest developments in the field, introduces the concepts and best practices of software architecture--how a software system is structured and how that system's elements are meant to interact. Distinct from the details of implementation, algorithm, and data representation, an architecture holds the key to achieving system quality, is a reusable asset that can be applied to subsequent systems, and is crucial to a software organization's business strategy. Drawing on their own extensive experience, the authors cover the essential technical topics for designing, specifying, and validating a system. They also emphasize the importance of the business context in which large systems are designed. Their aim is to present software architecture in a real-world setting, reflecting both the opportunities and constraints that companies encounter. To that end, case studies that describe successful architectures illustrate key points of both technical and organizational discussions. Topics new to this edition include: Architecture design and analysis, including the Architecture Tradeoff Analysis Method (ATAM) Capturing quality requirements and achieving them through quality scenarios and tactics Using architecture reconstruction to recover undocumented architectures Documenting architectures using the Unified Modeling Language (UML) New case studies, including Web-based examples and a wireless Enterprise JavaBeans™ (EJB) system designed to support wearable computers The financial aspects of architectures, including use of the Cost Benefit Analysis Method (CBAM) to make decisions If you design, develop, or manage the building of large software systems (or plan to do so), or if you are interested in acquiring such systems for your corporation or government agency, use Software Architecture in Practice, Second Edition, to get up to speed on the current state of software architecture.";"privates Exemplar";"http://bks8.books.google.de/books?id=mdiIu8Kk1WMC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780321154958";"en";"TAB 2.57";"528";"http://books.google.de/books?id=mdiIu8Kk1WMC&printsec=frontcover&dq=isbn:9780321154958&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley Professional";;"Software Architecture in Practice";"0"
"30076";"Len Bass; Paul Clements; Rick Kazman";"0.0";"Software-Architektur";"18.09.2013";"01.01.1998";"This book introduces the concepts and practice of software architecture -- what a system is designed to do, and how its components are meant to interact with each other. An architecture is an abstract view, distinct from the details of implementation, algorithm, and data representation. Its creation is the first step in designing a system with properties desired by customers, end users, developers, maintainers, and other interested parties. The authors cover not only essential technical topics for specifying and validating a system, but, for the first time, emphasize the importance of the business context in which large systems are designed. Enhancing both technical and organizational discussions, key points are illuminated by substantial case studies undertaken by the authors and the Software Engineering Institute.";"privates Exemplar";"http://bks5.books.google.de/books?id=uKhQAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780201199307";"en";"TAB 2.57";"452";"http://books.google.de/books?id=uKhQAAAAMAAJ&dq=isbn:9780201199307&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley Professional";;"Software architecture in practice";"0"
"30077";"Jorge Marx Gómez; Claus Rautenstrauch; André Zwanziger";"0.0";"Software-Architektur";"18.09.2013";"01.03.2006";"Umfassende Einführung in alle relevanten Grundlagen, Methoden und Technologien, wobei im Gegensatz zur aktuellen Literatur zu diesem Thema, Software-Architekturen aus den betriebswirtschaftlichen Anforderungen hergeleitet und zum Lehrbuch für Systementwicklung zusammengefasst werden. Dafür sind erstmalig Ideen zu Pattern, Patternsprachen, Fachkomponenten und Web-Services in einem Vorgehensmodell zur Systementwicklung vereint.";"privates Exemplar";"http://bks6.books.google.de/books?id=LMpu1ZqP2rUC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9783540258216";"de";"TAB 2.57";"192";"http://books.google.de/books?id=LMpu1ZqP2rUC&printsec=frontcover&dq=isbn:9783540258216&hl=&cd=1&source=gbs_api";;"BOOK";"Springer DE";;"Software-Architekturen für das E-Business";"0"
"30078";"Shari Lawrence Pfleeger; Joanne M. Atlee";"0.0";"Software-Architektur";"18.09.2013";"01.01.2006";"For introductory courses in Software Engineering. This introduction to software engineering and practice addresses both procedural and object-oriented development. The book applies concepts consistently to two common examples – a typical information system and a real-time system. It combines theory with real, practical applications by providing an abundance of case studies and examples from the current literature. This revision has been thoroughly updated to reflect significant changes in software engineering, including modeling and agile methods.";"privates Exemplar";"http://bks9.books.google.de/books?id=ozJkQgAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780131984615";"en";"TAB 2.57";"716";"http://books.google.de/books?id=ozJkQgAACAAJ&dq=isbn:9780131984615&hl=&cd=1&source=gbs_api";;"BOOK";;;"Software Engineering";"0"
"30079";"Ian Sommerville";"0.0";"Software-Architektur";"18.09.2013";"01.01.2007";;"privates Exemplar";"http://bks9.books.google.de/books?id=5ohDPgAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783827372574";"en";"TAB 2.57";"875";"http://books.google.de/books?id=5ohDPgAACAAJ&dq=isbn:9783827372574&hl=&cd=1&source=gbs_api";;"BOOK";;;"Software Engineering";"0"
"30080";"Andrea de Lucia; Filomena Ferrucci";"0.0";"Software-Architektur";"18.09.2013";"16.03.2009";"The International Summer School on Software Engineering trains future researchers and facilitates the exchange of knowledge between academia and industry. This volume contains papers from recent summer schools and contributions on latest findings in the field.";"privates Exemplar";"http://bks8.books.google.de/books?id=r8ZKmKYs7R0C&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9783540958871";"en";"TAB 2.57";"257";"http://books.google.de/books?id=r8ZKmKYs7R0C&printsec=frontcover&dq=isbn:9783540958871&hl=&cd=1&source=gbs_api";;"BOOK";"Springer";;"Software Engineering";"0"
"30081";"Leszek A. Maciaszek; Bruc Lee Liong; Stephen Bills";"0.0";"Software-Architektur";"18.09.2013";"01.01.2005";"The distinctive character of this book stems from two endeavors. First, this book is about the way software engineering is done in practice. Second, it is about software engineering for enterprise applications. 'Enterprise applications include payroll, patient records, shipping tracking, cost analysis, credit scoring, insurance, supply chain, accounting, customer service, and foreign exchange trading. Enterprise applications don't include automobile fuel injection, word processors, elevator controllers, chemical plant controllers, telephone switches, operating systems, compilers, and games.' (Fowler, 2003, p.3). The book is pivoted on one main case-study, a large number of supporting examples, and end-of-chapter problem-solving exercises consisting of case-study exercises and minicases. A particular organization that the case-study, problem-solving exercises and most examples are derived from is a company specializing in advertising expenditure measurement. The book endeavors to give broad software engineering knowledge and to provide background information prior to presenting case-study solutions. However, a distinguishing emphasis of the book is to concentrate on support skills for system design and programming. For given requirements, the book iteratively develops design and implementation models. Case-study, examples and problem-solving exercises are carefully selected to emphasize various aspects of software development as necessitated by unique characteristics of different applications and target software solutions. The book consists of four parts. Part A (Software projects) discusses software lifecycle, software engineering tools, project planning, budgeting and scheduling, project quality, risk management, and change management. The next three parts (B, C, and D) concentrate on methods, techniques, processes, and development environments of software engineering. The case-study, examples and problem-solving exercises are based on the experience gained from a large ACNielsen project. For pedagogical reasons, industrial problems and solutions have been simplified and re-implemented specifically for the purpose of the book. Occasionally, for comparative purposes, more than one programming environment has been used in presented solutions. All programming code, including code not presented in the text, is available on the book's website. The code is mostly Java accessing Oracle database.";"privates Exemplar";"http://bks8.books.google.de/books?id=d9lzQgAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780321204653";"en";"TAB 2.57";"825";"http://books.google.de/books?id=d9lzQgAACAAJ&dq=isbn:9780321204653&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley";;"Practical Software Engineering";"0"
"30082";"J. E. Cooling";"0.0";"Software-Architektur";"18.09.2013";"01.01.2003";"The comprehensive coverage and real-world perspective makes the book accessible and appealing to both beginners and experienced designers. Covers both the fundamentals of software design and modern design methodologies Provides comparisons of different development methods, tools and languages Blends theory and practical experience together Emphasises the use of diagrams and is highly illustrated";"privates Exemplar";"http://bks5.books.google.de/books?id=xqPJjzDsK-AC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780201596205";"en";"TAB 2.57";"800";"http://books.google.de/books?id=xqPJjzDsK-AC&printsec=frontcover&dq=isbn:9780201596205&hl=&cd=1&source=gbs_api";;"BOOK";"Pearson Education";;"Software Engineering for Real-Time Systems";"0"
"30083";"Ian Sommerville";"0.0";"Software-Architektur";"18.09.2013";"26.03.2010";"This book discusses a comprehensive spectrum of software engineering techniques and shows how they can be applied in practical software projects. This edition features updated chapters on critical systems, project management and software requirements.";"privates Exemplar";"http://bks1.books.google.de/books?id=l0egcQAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780137053469";"en";"TAB 2.57";"773";"http://books.google.de/books?id=l0egcQAACAAJ&dq=isbn:9780137053469&hl=&cd=1&source=gbs_api";;"BOOK";"Pearson Custom Publishing";;"Software Engineering";"0"
"30084";"Wolfgang Zuser; Thomas Grechenig; Monika Köhle";"0.0";"Software-Architektur";"18.09.2013";"01.01.2004";;"privates Exemplar";"http://bks8.books.google.de/books?id=dMA1AAAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783827370907";"en";"TAB 2.57";"457";"http://books.google.de/books?id=dMA1AAAACAAJ&dq=isbn:9783827370907&hl=&cd=1&source=gbs_api";;"BOOK";;;"Software-Engineering";"0"
"30085";"Wolfgang Zuser; Thomas Grechenig; Monika Köhle";"0.0";"Software-Engineering";"18.09.2013";"01.01.2004";;"privates Exemplar";"http://bks8.books.google.de/books?id=dMA1AAAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783827370907";"de";"TAB 2.57";"457";"http://books.google.de/books?id=dMA1AAAACAAJ&dq=isbn:9783827370907&hl=&cd=1&source=gbs_api";"39.95";"BOOK";"Pearson";;"Software-Engineering";"0"
"30086";"Bernd Brügge; Allen H. Dutoit";"0.0";"Software-Engineering";"18.09.2013";"01.01.2004";;"privates Exemplar";;"9783827370822";"de";"TAB 2.57";"752";"http://books.google.de/books?id=aJgVAgAACAAJ&dq=isbn:9783827370822&hl=&cd=1&source=gbs_api";;"BOOK";;;"Objektorientierte Softwaretechnik";"0"
"30087";"Wolfgang Zuser";"0.0";"Software-Engineering";"18.09.2013";"01.01.2010";;"privates Exemplar";;"9783868940367";"de";"TAB 2.57";"286";"http://books.google.de/books?id=7KfpZwEACAAJ&dq=isbn:9783868940367&hl=&cd=1&source=gbs_api";;"BOOK";;;"Softwaretechnologie für Einsteiger";"0"
"30088";"Klaus Pohl; Chris Rupp";"0.0";"Requirements-Engineering";"18.09.2013";"01.01.2009";;"privates Exemplar";;"9783898646130";"de";"TAB 2.57";"172";"http://books.google.de/books?id=gw_eZwEACAAJ&dq=isbn:9783898646130&hl=&cd=1&source=gbs_api";"29.90";"BOOK";"dpunkt";;"Basiswissen requirements engineering";"0"
"30089";"Barry W. Boehm";"0.0";"Kostenschätzung";"18.09.2013";"01.01.2000";"Don't become a statistic-take control of your software projects and plan for success! Success in all types of organization depends increasingly on the development of customized software solutions, yet more than half of software projects now in the works will exceed both their schedules and their budgets by more than 50%. While some types of overruns remain unpredictable, most can be avoided by sound modeling. COCOMO II provides you with a thorough rework of the classic COCOMO model to address modern software processes and construction techniques along with representative examples of applying the models to key software decision situations. It was calibrated and validated using innovative statistical techniques to fit both expert judgment and 161 carefully collected project data points. The book also introduces emerging COCOMO II extensions for cost and schedule estimation of COTS integration and rapid development. You'll also: bull; Learn firsthand from knowledgeable authors-over 100 person-years of software cost estimation experience Make better software decisions by exploring their cost implications Use the cost and schedule estimates to better plan and control your projects and manage your risks Get started now with the software on the accompanying CD Keep up to date with the authors' Web site Software engineers, managers, and students will all find Software Cost Estimation with COCOMO II an invaluable guide to developing and managing successful software projects on time and under budget. About the CD-ROM The accompanying CD-ROM includes a current copy of COCOMO II, along with demonstration versions of three commercial COCOMO II packages and an extensive documentation suite. All examples from the book are provided live, so you can work them hands on, along with the reading.";"privates Exemplar";"http://bks6.books.google.de/books?id=8eopAQAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780130266927";"en";"TAB 2.57";"502";"http://books.google.de/books?id=8eopAQAAMAAJ&dq=isbn:9780130266927&hl=&cd=1&source=gbs_api";;"BOOK";;;"Software cost estimation with Cocomo II";"0"
"30090";"Benjamin Poensgen; Bertram Bock";"0.0";"Kostenschätzung";"18.09.2013";"01.01.2005";;"Uni-Bibliothek";"http://bks6.books.google.de/books?id=GVU2PQAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783898643320";"en";"TAB 2.57";"169";"http://books.google.de/books?id=GVU2PQAACAAJ&dq=isbn:9783898643320&hl=&cd=1&source=gbs_api";;"BOOK";;;"Function-Point-Analyse";"0"
"30091";"Benjamin Poensgen; Bertram Bock";"0.0";"Kostenschätzung";"18.09.2013";"01.01.2005";;"privates Exemplar";"http://bks6.books.google.de/books?id=GVU2PQAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783898643320";"en";"TAB 2.57";"169";"http://books.google.de/books?id=GVU2PQAACAAJ&dq=isbn:9783898643320&hl=&cd=1&source=gbs_api";;"BOOK";;;"Function-Point-Analyse";"0"
"30093";"Paul Clements; Linda M. Northrop";"0.0";"Produktlinien";"18.09.2013";"01.01.2002";"Long a standard practice in traditional manufacturing, the concept of product lines is relatively new to the software industry. A software product line is a family of systems that share a common set of core technical assets, with preplanned extensions and variations to address the needs of specific customers or market segments. Software organizations of all types and sizes are discovering that when skillfully implemented, a product line strategy can yield enormous gains in productivity, quality, and time-to-market. Software Product Lines is the culmination of an intensive investigation, undertaken by the Software Engineering Institute (SEI) at Carnegie Mellon, into how leading-edge software development organizations have 'retooled' for product lines. With explanations of fundamental concepts further illuminated by real-world experience, this book spells out the technical issues involved in adopting a product line strategy, as well as the organizational and management issues that are so critical for success. In providing a comprehensive set of practices and patterns, this book defines and explores the key activities for software product line development and explains specific practice areas in engineering, technical management, and organizational management. Highlights include: The benefits of a software product line approach, including actual improvement data from industrial success stories Methods to develop a reusable base of core assets and to develop products that utilize that core Common problems paired with concrete solutions in the form of reusable software product pine patterns Twenty-nine practice areas for successful implementation, including architecture definition,component development, configuration management, market analysis, and training The product line technical probe for identifying technical and organizational weaknesses that could impede success Three detailed case studies from the industry lead you step by step through the process of developing and managing software product lines, illustrating potential pitfalls, creative solutions, and the ultimate rewards. Discussion questions, sidebars, and real-world anecdotes from the trenches reveal the collective wisdom of those on the front line of software product line ventures. 0201703327B09102001";"privates Exemplar";"http://bks6.books.google.de/books?id=tHGFQgAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780201703320";"en";"TAB 2.57";"563";"http://books.google.de/books?id=tHGFQgAACAAJ&dq=isbn:9780201703320&hl=&cd=2&source=gbs_api";;"BOOK";"Addison-Wesley";;"Software Product Lines";"0"
"30094";"Krzysztof Czarnecki; Ulrich Eisenecker";"0.0";"Modellgetriebene Entwicklung";"18.09.2013";"01.01.2000";"-- Building generative models: overcoming the limitations of traditional object-oriented modeling. -- Aspect-Oriented Programming, metaprogramming, next-generation code generators, and more. -- Includes illustrative sample code in C, C++, and Java, and three detailed, start-to-finish case studies. Generative Programming (GP) offers the promise of moving from 'one-of-a-kind' software systems to the semi-automated manufacture of wide varieties of software -- essentially, an assembly line for software systems. GP's goal is to model software system families and build software modules such that, given particular requirements specs, highly customized and optimized intermediate or end products can be constructed on demand. This is the first book to cover Generative Programming in depth. The authors, leaders in their field, introduce the two-stage GP development cycle: one stage for designing and implementing a generative domain model, and another for using the model to build concrete systems. They review key differences between generative modeling and processes used for 'one-of-a-kind' systems. Next, they introduce key GP concepts such as feature models, and demonstrate 'generic programming' techniques for creating components which lend themselves to easy combination and reuse. The book also introduces Aspect Oriented Programming, which allows developers to solve key recurring problems in traditional O-O development; and presents metaprogramming techniques for building powerful program generators. Three detailed case studies demonstrate the entire generative development cycle, from analysis to implementation.";"privates Exemplar";"http://bks1.books.google.de/books?id=cCZXYQ6Pau4C&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780201309775";"en";"TAB 2.57";"832";"http://books.google.de/books?id=cCZXYQ6Pau4C&dq=isbn:9780201309775&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley";;"Generative programming";"0"
"30095";"Thomas Stahl; Markus Völter; Sven Efftinge; Arno Haase";"0.0";"Modellgetriebene Entwicklung";"18.09.2013";"01.05.2007";;"Uni-Bibliothek";;"9783898644488";"de";"TAB 2.57";"441";"http://books.google.de/books?id=wttCGQAACAAJ&dq=isbn:9783898644488&hl=&cd=1&source=gbs_api";;"BOOK";"dpunkt";;"Modellgetriebene Softwareentwicklung";"0"
"30096";"Ian H. Witten; Eibe Frank";"0.0";"Statistik";"18.09.2013";"01.01.2005";;"Uni-Bibliothek";;"9780120884070";"en";;"524";;;"BOOK";"Morgan Kaufmann";;"Data Mining";"0"
"30097";"David E. Simon";"0.0";"Software-Engineering";"18.09.2013";"01.01.1999";"Simon introduces the broad range of applications for embedded software and then reviews each major issue facing developers, offering practical solutions, techniques, and good habits that apply no matter which processor, real-time operating systems, methodology, or application is used.";"privates Exemplar";"http://bks0.books.google.de/books?id=xG2ZD55_BJAC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780201615692";"en";;"424";"http://books.google.de/books?id=xG2ZD55_BJAC&printsec=frontcover&dq=isbn:9780201615692&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley Professional";;"An Embedded Software Primer: Text";"0"
"30098";"Gernot Starke; Stefan Tilkov";"0.0";"Software-Engineering";"18.09.2013";"01.05.2007";;"privates Exemplar";;"9783898644372";"de";;"874";"http://books.google.de/books?id=2e5CGQAACAAJ&dq=isbn:9783898644372&hl=&cd=1&source=gbs_api";;"BOOK";;;"SOA-Expertenwissen";"0"
"30099";"Dirk Krafzig; Karl Banke; Dirk Slama";"0.0";"Service-Oriented Architecture";"18.09.2013";"01.01.2007";;"privates Exemplar";"http://bks6.books.google.de/books?id=Tl6HGQAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783826617294";"de";;"382";"http://books.google.de/books?id=Tl6HGQAACAAJ&dq=isbn:9783826617294&hl=&cd=1&source=gbs_api";"39.95";"BOOK";;;"Enterprise SOA";"0"
"30100";"Clemens Szyperski";"0.0";"Service-Oriented Architecture";"18.09.2013";"01.01.2002";"Intended for software architects and managers, this book explains the nature of component software and how it will affect the engineering, marketing, and deployment of software. Szyperski, who works for Microsoft and is affiliated with Queensland University of Technology, discusses some issues raised by component engineering problems, and presents several approaches to component frameworks. The second edition adds sections on XML, Enterprise JavaBeans, COM+, and the .NET framework. Annotation copyrighted by Book News, Inc., Portland, OR";"Uni-Bibliothek";"http://bks6.books.google.de/books?id=U896iwmtiagC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9780201745726";"en";;"589";"http://books.google.de/books?id=U896iwmtiagC&printsec=frontcover&dq=isbn:9780201745726&hl=&cd=1&source=gbs_api";;"BOOK";"Pearson Education";;"Component Software";"0"
"30101";"Brian Chess; Jacob West";"0.0";"Programmanalyse; Security";"18.09.2013";"01.01.2007";"The First Expert Guide to Static Analysis for Software Security! Creating secure code requires more than just good intentions. Programmers need to know that their code will be safe in an almost infinite number of scenarios and configurations. Static source code analysis gives users the ability to review their work with a fine-toothed comb and uncover the kinds of errors that lead directly to security vulnerabilities. Now, there’s a complete guide to static analysis: how it works, how to integrate it into the software development processes, and how to make the most of it during security code review. Static analysis experts Brian Chess and Jacob West look at the most common types of security defects that occur today. They illustrate main points using Java and C code examples taken from real-world security incidents, showing how coding errors are exploited, how they could have been prevented, and how static analysis can rapidly uncover similar mistakes. This book is for everyone concerned with building more secure software: developers, security engineers, analysts, and testers. Coverage includes: Why conventional bug-catching often misses security problems How static analysis can help programmers get security right The critical attributes and algorithms that make or break a static analysis tool 36 techniques for making static analysis more effective on your code More than 70 types of serious security vulnerabilities, with specific solutions Example vulnerabilities from Firefox, OpenSSH, MySpace, eTrade, Apache httpd, and many more Techniques for handling untrusted input Eliminating buffer overflows: tactical and strategic approaches Avoiding errors specific to Web applications, Web services, and Ajax Security-aware logging, debugging, and error/exception handling Creating, maintaining, and sharing secrets and confidential information Detailed tutorials that walk you through the static analysis process “We designed Java so that it could be analyzed statically. This book shows you how to apply advanced static analysis techniques to create more secure, more reliable software.” –Bill Joy, Co-founder of Sun Microsystems, co-inventor of the Java programming language “'Secure Programming with Static Analysis' is a great primer on static analysis for security-minded developers and security practitioners. Well-written, easy to read, tells you what you need to know.” –David Wagner, Associate Professor, University of California Berkeley “Software developers are the first and best line of defense for the security of their code. This book gives them the security development knowledge and the tools they need in order to eliminate vulnerabilities before they move into the final products that can be exploited.” –Howard A. Schmidt, Former White House Cyber Security Advisor BRIAN CHESS is Founder and Chief Scientist of Fortify Software, where his research focuses on practical methods for creating secure systems. He holds a Ph.D. in Computer Engineering from University of California Santa Cruz, where he studied the application of static analysis to finding security-related code defects. JACOB WEST manages Fortify Software’s Security Research Group, which is responsible for building security knowledge into Fortify’s products. He brings expertise in numerous programming languages, frameworks, and styles together with deep knowledge about how real-world systems fail. CD contains a working demonstration version of Fortify Software’s Source Code Analysis (SCA) product; extensive Java and C code samples; and the tutorial chapters from the book in PDF format. Part I: Software Security and Static Analysis 1 1 The Software Security Problem 3 2 Introduction to Static Analysis 21 3 Static Analysis as Part of the Code Review Process 47 4 Static Analysis Internals 71 Part II: Pervasive Problems 115 5 Handling Input 117 6 Buffer Overflow 175 7 Bride of Buffer Overflow 235 8 Errors and Exceptions 265 Part III: Features and Flavors 295 9 Web Applications 297 10 XML and Web Services 349 11 Privacy and Secrets 379 12 Privileged Programs 421 Part IV: Static Analysis in Practice 457 13 Source Code Analysis Exercises for Java 459 14 Source Code Analysis Exercises for C 503 Epilogue 541 References 545 Index 559";"Uni-Bibliothek";"http://bks1.books.google.de/books?id=DnUbmQEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780321424778";"en";;"587";"http://books.google.de/books?id=DnUbmQEACAAJ&dq=isbn:9780321424778&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley";;"Secure Programming with Static Analysis";"0"
"30102";"Alfred V. Aho; Ravi Sethi; Jeffrey D. Ullman";"0.0";"Programmanalyse";"18.09.2013";"01.01.1988";;"privates Exemplar";;"9800201100889";"en";"TAB 2.57";"796";;;"BOOK";"Addison-Wesley";"Principles, Techniques, and Tools";"Compilers";"0"
"30103";"Alfred V. Aho; Ravi Sethi; Jeffrey D. Ullman";"0.0";"Programmanalyse";"18.09.2013";"01.01.1988";;"privates Exemplar";;"389319150X";"de";"TAB 2.57";"567";;;"BOOK";"Addison-Wesley";;"Compilerbau Teil 1";"0"
"30104";"Alfred V. Aho; Ravi Sethi; Jeffrey D. Ullman";"0.0";"Programmanalyse";"18.09.2013";"01.01.1989";;"privates Exemplar";;"9783893191512";"de";"TAB 2.57";"378";"http://books.google.de/books?id=gstNSAAACAAJ&dq=isbn:9783893191512&hl=&cd=1&source=gbs_api";;"BOOK";"Addison-Wesley";;"Compilerbau Teil 2";"0"
"30105";"C Robert Morgan";"0.0";"Programmanalyse";"18.09.2013";"01.01.1998";"Building an Optimizing Compiler provides a high-level design for a thorough optimizer, code generator, scheduler, and register allocator for a generic modern RISC processor. In the process it addresses the small issues that have a large impact on the implementation. The book approaches this subject from a practical viewpoint. Theory is introduced where intuitive arguments are insufficient; however, the theory is described in practical terms. Building an Optimizing Compiler provides a complete theory for static single assignment methods and partial redundancy methods for code optimization. It also provides a new generalization of register allocation techniques. A single running example is used throughout the book to illustrate the compilation process.";"privates Exemplar";"http://bks3.books.google.de/books?id=CXlhQgAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9781555581794";"en";"TAB 2.57";"450";"http://books.google.de/books?id=CXlhQgAACAAJ&dq=isbn:9781555581794&hl=&cd=1&source=gbs_api";;"BOOK";;;"Building an Optimizing Compiler";"0"
"30106";"Muchnik";"0.0";"Programmanalyse";"18.09.2013";"01.01.1997";"From the Foreword by Susan L. Graham: This book takes on the challenges of contemporary languages and architectures, and prepares the reader for the new compiling problems that will inevitably arise in the future. The definitive book on advanced compiler design This comprehensive, up-to-date work examines advanced issues in the design and implementation of compilers for modern processors. Written for professionals and graduate students, the book guides readers in designing and implementing efficient structures for highly optimizing compilers for real-world languages. Covering advanced issues in fundamental areas of compiler design, this book discusses a wide array of possible code optimizations, determining the relative importance of optimizations, and selecting the most effective methods of implementation. * Lays the foundation for understanding the major issues of advanced compiler design * Treats optimization in-depth * Uses four case studies of commercial compiling suites to illustrate different approaches to compiler structure, intermediate-code design, and optimization-these include Sun Microsystems's compiler for SPARC, IBM's for POWER and PowerPC, DEC's for Alpha, and Intel's for Pentium an related processors * Presents numerous clearly defined algorithms based on actual cases * Introduces Informal Compiler Algorithm Notation (ICAN), a language devised by the author to communicate algorithms effectively to people";"privates Exemplar";"http://bks0.books.google.de/books?id=Pq7pHwG1_OkC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9781558603202";"en";"TAB 2.57";"856";"http://books.google.de/books?id=Pq7pHwG1_OkC&printsec=frontcover&dq=isbn:9781558603202&hl=&cd=1&source=gbs_api";;"BOOK";"Morgan Kaufmann Publishers";;"Advanced Compiler Design Implementation";"0"
"30107";"Alfred V. Aho; Monica S. Lam; Ravi Sethi; Jeffrey D. Ullman";"0.0";"Programmanalyse";"18.09.2013";"01.01.2008";;"privates Exemplar";"http://bks3.books.google.de/books?id=pTKAwL64NkoC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9783827370976";"de";"TAB 2.57";"1253";"http://books.google.de/books?id=pTKAwL64NkoC&printsec=frontcover&dq=isbn:9783827370976&hl=&cd=1&source=gbs_api";;"BOOK";"Pearson Deutschland GmbH";"Prinzipien, Techniken und Werkzeuge";"Compiler";"0"
"30108";"Stanley B. Lippman";"0.0";"Programmiersprachen";"18.09.2013";"01.01.1991";;"privates Exemplar";"http://bks1.books.google.de/books?id=89JQAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780201548488";"en";"TAB 2.57";"614";"http://books.google.de/books?id=89JQAAAAMAAJ&dq=isbn:9780201548488&hl=&cd=1&source=gbs_api";;"BOOK";"Addison Wesley";;"C++ primer";"0"
"30109";"Mike Murach; Anne Prince; Raul Menendez";"0.0";"Programmiersprachen";"18.09.2013";"31.08.2004";"This is the latest edition of our classic COBOL book that has set the standard for structured design and coding since the mid-1970s. So if you want to learn how to write COBOL programs the way they're written in the best enterprise COBOL shops, this is the book for you. And when you're done learning from this book, it becomes the best reference you'll ever find for use on the job. Throughout the book, you will learn how to use COBOL on IBM mainframes because that's where 90% or more of all COBOL is running. But to work on a mainframe, you need to know more than just the COBOL language. That's why this book also shows you: how to use the ISPF editor for entering programs; how to use TSO/E and JCL to compile and test programs; how to use the AMS utility to work with VSAM files; how to use CICS for developing interactive COBOL programs; how to use DB2 for developing COBOL programs that handle database data; how to maintain legacy programs. If you want to learn COBOL for other platforms, this book will get you off to a good start because COBOL is a standard language. In fact, all of the COBOL that's presented in this book will also run on any other platform that has a COBOL compiler. Remember, though, that billions of lines of mainframe COBOL are currently in use, and those programs will keep programmers busy for many years to come.";"privates Exemplar";"http://bks7.books.google.de/books?id=kDcNAAAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9781890774240";"en";"TAB 2.57";"687";"http://books.google.de/books?id=kDcNAAAACAAJ&dq=isbn:9781890774240&hl=&cd=1&source=gbs_api";;"BOOK";"Mike Murach & Associates Incorporated";;"Murach's Mainframe Cobol";"0"
"30110";"Intermetrics Inc. ";"0.0";"Programmiersprachen";"18.09.2013";"01.01.1995";;"privates Exemplar";;;;"TAB 2.57";"0";;;"BOOK";"International Standard ANSI/ISO/IEC-8652:1995";;"Ada 95 Reference Manual";"0"
"30111";"Grady Booch";"0.0";"Programmiersprachen";"18.09.2013";"01.01.1987";;"privates Exemplar";"http://bks5.books.google.de/books?id=QaEpAQAAIAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780805306040";"en";"TAB 2.57";"580";"http://books.google.de/books?id=QaEpAQAAIAAJ&dq=isbn:9780805306040&hl=&cd=1&source=gbs_api";;"BOOK";"Benjamin-Cummings Publishing Company";;"Software engineering with Ada";"0"
"30112";"Reinhard Schiedermeier";"0.0";"Programmiersprachen";"18.09.2013";"01.01.2010";;"privates Exemplar";"http://bks8.books.google.de/books?id=b_zn0XfWvkkC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9783868940312";"de";"TAB 2.57";"467";"http://books.google.de/books?id=b_zn0XfWvkkC&printsec=frontcover&dq=isbn:9783868940312&hl=&cd=1&source=gbs_api";;"BOOK";"Pearson Deutschland GmbH";;"Programmieren mit Java";"0"
"30113";"Thomas Bräunl";"0.0";"Programmiersprachen";"18.09.2013";"01.01.1993";;"privates Exemplar";"http://bks5.books.google.de/books?id=lDjNygAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"3528051426";"de";"TAB 2.57";"277";"http://books.google.de/books?id=lDjNygAACAAJ&dq=isbn:3528051426&hl=&cd=1&source=gbs_api";;"BOOK";;;"Parallele Programmierung";"0"
"30114";"Leon Sterling; Ehud Shapiro";"0.0";"Programmiersprachen";"18.09.2013";"01.01.1988";;"privates Exemplar";;"3925118845";"en";"TAB 2.57";"468";"http://books.google.de/books?id=FNWuAAAACAAJ&dq=isbn:3925118845&hl=&cd=1&source=gbs_api";;"BOOK";;;"Prolog";"0"
"30115";"Guy L. Steele Jr.";"0.0";"Programmiersprachen";"18.09.2013";"01.01.1990";;"privates Exemplar";;"9791555580413";"en";"TAB 2.57";"1030";;;"BOOK";"Digital Press";"The Language, 2nd edition";"Common Lisp";"0"
"30116";"Patrick Henry Winston; Berthold Horn";"0.0";"Programmiersprachen";"18.09.2013";"01.01.1984";"This third edition is a revised and expanded version of Winston and Horn's best-selling introduction to the LISP programming language and to LISP-based applications, many of which are possible as a result of advances in Artificial Intelligence technology.";"privates Exemplar";"http://bks6.books.google.de/books?id=a6dQAAAAMAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"0201083728";"en";"TAB 2.57";"434";"http://books.google.de/books?id=a6dQAAAAMAAJ&dq=isbn:0201083728&hl=&cd=1&source=gbs_api";;"BOOK";"Addison Wesley Publishing Company";;"LISP";"0"
"30117";"Robert W. Sebesta";"0.0";"Programmiersprachen";"18.09.2013";"01.01.1993";;"privates Exemplar";;"9780805371307";"en";"TAB 2.57";"569";"http://books.google.de/books?id=n9e1QgAACAAJ&dq=isbn:9780805371307&hl=&cd=1&source=gbs_api";;"BOOK";"Benjamin-Cummings Publishing Company";;"Computer Science";"0"
"30118";"Alan Burns; Andy Wellings";"0.0";"Programmiersprachen";"18.09.2013";"01.01.1997";;"privates Exemplar";;"9780201403657";"en";"TAB 2.57";"611";;;"BOOK";"Addison-Wesley";;"Real-Time Systems and Programming Languages";"0"
"30119";"Serge Lidin";"0.0";"Programmiersprachen";"18.09.2013";"01.01.2002";"Get the inside scoop on this critical low-level language with an architectural guide from the most reliable authority--the language's designer, Serge Lidin. Readers discover common structures, functions, and rules for designing .NET applications, explanations for how .NET executables compile, details on the .NET IL Assembler, IL Disassembler and Metadata Validation tools, and more.";"privates Exemplar";"http://bks9.books.google.de/books?id=jjNiQgAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780735615472";"en";"TAB 2.57";"467";"http://books.google.de/books?id=jjNiQgAACAAJ&dq=isbn:9780735615472&hl=&cd=1&source=gbs_api";;"BOOK";"Microsoft Press";;"Inside Microsoft . NET IL Assembler.";"0"
"30120";"Jeffrey Richter";"0.0";"Programmiersprachen";"18.09.2013";"01.05.2006";;"privates Exemplar";"http://bks2.books.google.de/books?id=OqYzPQAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783860639849";"en";"TAB 2.57";"681";"http://books.google.de/books?id=OqYzPQAACAAJ&dq=isbn:9783860639849&hl=&cd=1&source=gbs_api";;"BOOK";;;"Microsoft.NET Framework-Programmierung mit C#";"0"
"30121";"Brent B. Welch";"0.0";"Programmiersprachen";"18.09.2013";"01.01.1997";"A new and revised edition of the bestselling first edition, Welch's new revision includes coverage of the latest releases of Tcl (8.0) and Tk (8.0). The new version of Tk supports the Mac, Windows 3.1, Win95, and Windows NT, greatly expanding the potential market for this edition. The CD-ROM includes the latest versions of Tcl and Tk.";"privates Exemplar";"http://bks7.books.google.de/books?id=KoY_AQAAIAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780136168300";"en";"TAB 2.57";"630";"http://books.google.de/books?id=KoY_AQAAIAAJ&dq=isbn:9780136168300&hl=&cd=1&source=gbs_api";;"BOOK";"Prentice Hall";;"Practical programming in Tcl & Tk";"0"
"30122";"Regionales Rechenzentrum für Niedersachsen / Universität Hannover";"0.0";"Programmiersprachen";"18.09.2013";"01.03.1985";;"privates Exemplar";;;"de";"TAB 2.57";"0";;;"BOOK";;"Ein Nachschlagewerk";"Fortran 77 Sprachumfang";"0"
"30123";"Robert Cecil Martin";"0.0";"Programmierung";"18.09.2013";"01.01.2009";"Looks at the principles and clean code, includes case studies showcasing the practices of writing clean code, and contains a list of heuristics and 'smells' accumulated from the process of writing clean code.";"Uni-Bibliothek";"http://bks9.books.google.de/books?id=dwSfGQAACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9780132350884";"en";"TAB 2.57";"431";"http://books.google.de/books?id=dwSfGQAACAAJ&dq=isbn:9780132350884&hl=&cd=1&source=gbs_api";;"BOOK";"Prentice-Hall PTR";;"Clean Code";"0"
"30124";"Gabriel Valiente";"0.0";"Algorithmen";"18.09.2013";"28.10.2002";"Graph algorithms is a well-established subject in mathematics and computer science. Beyond classical application fields, like approximation, combinatorial optimization, graphics, and operations research, graph algorithms have recently attracted increased attention from computational molecular biology and computational chemistry. Centered around the fundamental issue of graph isomorphism, this text goes beyond classical graph problems of shortest paths, spanning trees, flows in networks, and matchings in bipartite graphs. Advanced algorithmic results and techniques of practical relevance are presented in a coherent and consolidated way. This book introduces graph algorithms on an intuitive basis followed by a detailed exposition in a literate programming style, with correctness proofs as well as worst-case analyses. Furthermore, full C++ implementations of all algorithms presented are given using the LEDA library of efficient data structures and algorithms. Numerous illustrations, examples, and exercises, and a comprehensive bibliography support students and professionals in using the book as a text and source of reference";"privates Exemplar";"http://bks2.books.google.de/books?id=NSfIWxqPlbcC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9783540435501";"en";"TAB 2.57";"490";"http://books.google.de/books?id=NSfIWxqPlbcC&printsec=frontcover&dq=isbn:9783540435501&hl=&cd=1&source=gbs_api";;"BOOK";"Springer";;"Algorithms on Trees and Graphs";"0"
"30125";"Stephan Diehl";"0.0";"Algorithmen";"18.09.2013";"28.05.2002";"This book presents the state of the art in software visualization and thus attempts to establish it as a field on its own. Based on a seminar held at Dagstuhl Castle in May 2001, the book offers topical sections on: - algorithm animation - software visualization and software engineering - software visualization and education - graphs in software visualization - and perspectives of software visualization. Each section starts with an introduction surveying previous and current work and providing extensive bibliographies.";"privates Exemplar";"http://bks3.books.google.de/books?id=kFN0FT1JRNQC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9783540433231";"en";"TAB 2.57";"403";"http://books.google.de/books?id=kFN0FT1JRNQC&printsec=frontcover&dq=isbn:9783540433231&hl=&cd=2&source=gbs_api";;"BOOK";"Springer";;"Software Visualization";"0"
"30126";"John E. Hopcroft; Jeffrey D. Ullman";"0.0";"Formale Methoden";"18.09.2013";"01.01.1989";"Theory of Computation -- Computation by Abstracts Devices.";"privates Exemplar";;"3925118829";"en";"TAB 2.57";"440";"http://books.google.de/books?id=MpqmPQAACAAJ&dq=isbn:3925118829&hl=&cd=1&source=gbs_api";;"BOOK";;;"Einführung in die Automatentheorie, formale Sprachen und Komplexitätstheorie";"0"
"30127";"Stephan Kleuker";"0.0";"Formale Methoden";"18.09.2013";"15.09.2009";"Software muss funktionieren, um von Kunden akzeptiert zu werden. Doch wie stellt man sicher, dass die Steuerung eines Raumschiffs, eines Herzschrittmachers oder einer Aktienverwaltung korrekt funktioniert? Neben den klassischen Testansatzen spielen fur den Korrektheitsnachweis zunehmend formale Modelle eine zentrale Rolle. Ein Modell erlaubt es, ein beliebiges sequenzielles oder verteiltes System zu analysieren und zu simulieren. Dadurch, dass Korrektheitsanforderungen prazise definiert werden, kann man sogar verifizieren, dass die Anforderungen erfullt sind. Dieses Buch stellt unterschiedliche formale Modelle mit ihren Einsatzmoglichkeiten und Werkzeugen vor. Dabei steht bewusst die Anwendung der Modelle und nicht die Theorie dahinter im Vordergrund. Der Inhalt: Motivation von formalen Modellen Model Checking mit Promela und Spin Timed Automata Petrinetze Semantik und Verifikation sequenzieller und paralleler Programme Die Zielgruppe: - Informatik-Studierende ab 4. Semester - Studierende in Informatik-orientierten Master-Studiengangen - Entwickler kritischer Software-Systeme - An Qualitatssicherung Interessierte Der Autor: Prof. Dr. Stephan Kleuker hat im Themengebiet 'formale Methoden' promoviert und lehrt seit mehreren Jahren Software-Engineering an den Fachhochschulen in Osnabrück und Wiesbaden. Er hat mehrjahrige Praxiserfahrung als Systemanalytiker sowie als Berater bei der Erstellung komplexer Software-Systeme.";"privates Exemplar";"http://bks3.books.google.de/books?id=XNtzT8ADSn8C&printsec=frontcover&img=1&zoom=1&source=gbs_api";"9783834806697";"de";"TAB 2.57";"301";"http://books.google.de/books?id=XNtzT8ADSn8C&dq=isbn:9783834806697&hl=&cd=1&source=gbs_api";;"BOOK";"Vieweg +Teubner";;"Formale Modelle der Softwareentwicklung";"0"
"30128";"Hartmut Ehrig; Hans-Jörg Kreowski";"0.0";"Formale Methoden";"18.09.2013";"24.03.2005";"By presenting state-of-the-art research results on various aspects of formal and visual modeling of software and systems, this book commemorates the 60th birthday of Hartmut Ehrig. The 24 invited reviewed papers are written by students and collaborators of Hartmut Ehrig who are established researchers in their fields. Reflecting the scientific interest and work of Hartmut Ehrig, the papers fall into three main parts on graph transformation, algebraic specification and logic, and formal and visual modeling.";"privates Exemplar";"http://bks7.books.google.de/books?id=OUuQjr7j-ssC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9783540249368";"en";"TAB 2.57";"411";"http://books.google.de/books?id=OUuQjr7j-ssC&printsec=frontcover&dq=isbn:9783540249368&hl=&cd=1&source=gbs_api";;"BOOK";"Springer";;"Formal Methods in Software and Systems Modeling";"0"
"30129";"Bernhard Ganter; Gerd Stumme; Rudolf Wille";"0.0";"Formale Methoden";"18.09.2013";"23.08.2005";"Formal concept analysis has been developed as a field of applied mathematics based on the mathematization of concept and concept hierarchy. It thereby allows us to mathematically represent, analyze, and construct conceptual structures. The formal concept analysis approach has been proven successful in a wide range of application fields.This book constitutes a comprehensive and systematic presentation of the state of the art of formal concept analysis and its applications. The first part of the book is devoted to foundational and methodological topics. The contributions in the second part demonstrate how formal concept analysis is successfully used outside of mathematics, in linguistics, text retrieval, association rule mining, data analysis, and economics. The third part presents applications in software engineering.";"privates Exemplar";"http://bks2.books.google.de/books?id=sdljt8HztHEC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9783540278917";"en";"TAB 2.57";"348";"http://books.google.de/books?id=sdljt8HztHEC&printsec=frontcover&dq=isbn:9783540278917&hl=&cd=1&source=gbs_api";;"BOOK";"Springer Verlag";;"Formal Concept Analysis";"0"
"30130";"Frank Simon; Daniel Simon";"0.0";"Software-Qualität";"18.09.2013";"01.01.2010";"Jede ber den Betrieb hinausgehende Entwicklung oder nderung von IT-Systemen geschieht heute ber IT-Projekte, d.h. Vorhaben mit vorab gesteckten Zielen, Terminen und Aufw nden.Von Anfang an gef hrden viele Risiken den Erfolg von IT-Projekten und es ist erfahrungsgem praktisch unm glich, allen diesen Risiken abschlie end zu begegnen. Es ist aber sehr wohl realistisch, die Risiken im Vorfeld m glichst ganzheitlich zu erfassen und dann fortw hrend zu beobachten, um bei Bedarf so fr h wie m glich gegensteuern zu k nnen. So wird aus der Durchf hrung von IT-Projekten eine aktiv steuernde Disziplin.Das in diesem Buch beschriebene Qualit ts-Risiko-Management (QRM) unterst tzt die erfolgreiche Durchf hrung von Projekten, indem es bereits von Beginn an ein m glichst ganzheitliches Bild aller m glichen Risikoquellen aufzeigt. Im Projektverlauf dient QRM dann dazu, die identifizierten Risiken messbasiert und automatisierbar fortw hrend zu beobachten, damit bei Bedarf so fr h wie m glich Gegenma nahmen abgeleitet werden k nnen. Das beschriebene Vorgehen orientiert sich dabei eng an der Ingenieursdisziplin, d.h. es ist systematisch, diszipliniert und messbar. Das dem QRM ebenfalls zugrundeliegende Y-Modell wird eben diesen Zielen gerecht und l sst sich dennoch mit einfachen Mitteln im Projekt umsetzen.Das QRM liefert dem Kapit n eines IT-Projektes damit eine pr zise Karte zur Zielbestimmung und die f r die erfolgreiche Reise notwendigen Navigationsinstrumente, damit dieser jederzeit wei , ob sich das Schiff noch auf dem Weg zum Ziel befindet oder der Kurs korrigiert werden muss.";"privates Exemplar";"http://bks8.books.google.de/books?id=1dfAsMJ36iwC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9783832526788";"de";"TAB 2.57";"178";"http://books.google.de/books?id=1dfAsMJ36iwC&printsec=frontcover&dq=isbn:9783832526788&hl=&cd=1&source=gbs_api";;"BOOK";"Logos Verlag Berlin GmbH";;"Qualitäts-Risiko-Management: Ganzheitliche Projektsteuerung";"0"
"30131";"Hans Liebig";"0.0";"Software-Qualität";"18.09.2013";"20.09.2005";"Mit dieser Neuauflage liegt der Klassiker der Digitaltechnik nun in der vierten Auflage vor. Das Buch behandelt Prinzipien und Methoden für den Entwurf digitaler Systeme. Dabei stehen Betrachtungen auf der Logikschaltungsebene bis zur Registertransferebene im Vordergrund. Spezielle Technologien werden insoweit berücksichtigt, wie sie einen grundlegenden Einfluss auf den Schaltungsentwurf haben. Folgende Themen werden besonders gründlich behandelt: Der Logikalkül der Mathematik, Durchschalt- und Verknüpfungstechnik für Logik- und Speicherbausteine, Asynchrontechnik vom Petri-Netz zur Schaltung, Synchrontechnik mit parallel arbeitenden Werken sowie Zusammenbau von applikationsspezifischen ICs und programmierbaren Universalrechnern. In der vierten Auflage wurde die Strukturierung und somit die Lesbarkeit des Buches weiter verbessert. Die vielen Zeichnungen und anwendungsorientierten Aufgaben unterstützen dies zusätzlich. Die Lösungen wurden noch gründlicher ausgearbeitet. Neu aufgenommen wurden die Verwendung programmiersprachlicher Ausdrucksmittel sowie Anwendungen aus der Signalverarbeitung. Das Buch ermöglicht einen systematischen Einstieg in den Entwurf digitaler Systeme. Es vermittelt dem Leser die notwendigen Grundlagen zum Verstehen weiterführender Literatur. Mit LEVis und COVis stehen zusätzlich zwei Visualisierungs-/Simulationsprogramme zur Verfügung, die übers Internet unter der URL http://rosw.cs.tu-berlin.de/sonstiges zugänglich sind.";"privates Exemplar";"http://bks8.books.google.de/books?id=QtEcbeMAyjMC&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api";"9783540260264";"de";"TAB 2.57";"498";"http://books.google.de/books?id=QtEcbeMAyjMC&printsec=frontcover&dq=isbn:9783540260264&hl=&cd=1&source=gbs_api";;"BOOK";"Springer DE";;"Logischer Entwurf digitaler Systeme";"0"
"30132";"Jürgen Gausemeier";"0.0";"Informatik und Maschinenbau";"18.09.2013";"01.01.2007";;"privates Exemplar";;"9783939350385";"en";"TAB 2.57";"322";"http://books.google.de/books?id=EeFOPwAACAAJ&dq=isbn:9783939350385&hl=&cd=1&source=gbs_api";;"BOOK";;;"Vorausschau und Technologieplanung";"0"
"30133";"Jürgen Gausemeier";"0.0";"Informatik und Maschinenbau";"18.09.2013";"01.01.2007";;"privates Exemplar";;"9783939350385";"en";"TAB 2.57";"322";"http://books.google.de/books?id=EeFOPwAACAAJ&dq=isbn:9783939350385&hl=&cd=1&source=gbs_api";;"BOOK";;;"Vorausschau und Technologieplanung";"0"
"30134";"Gero Scholz";"0.0";"Informatik und Maschinenbau";"18.09.2013";"10.10.2010";;"privates Exemplar";;;;"TAB 2.57";"345";;;"BOOK";"IVU";;"IT-Systeme für Verkehrsunternehmen";"0"
"30135";"Alfred Büllesbach";"0.0";"Informatik und Recht";"18.09.2013";"01.01.1997";;"privates Exemplar";"http://bks3.books.google.de/books?id=mOUVAQAAIAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api";"3504670053";"de";"TAB 2.57";"300";"http://books.google.de/books?id=mOUVAQAAIAAJ&dq=isbn:3504670053&hl=&cd=1&source=gbs_api";;"BOOK";;;"Datenschutz im Telekommunikationsrecht";"0"
